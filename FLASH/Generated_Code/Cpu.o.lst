   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Cpu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	AccReady,1,1
  18              		.comm	PrintReady,1,1
  19              		.comm	AccData,6,4
  20              		.comm	Xout_14_bit,2,2
  21              		.comm	Yout_14_bit,2,2
  22              		.comm	Zout_14_bit,2,2
  23              		.comm	Zout_g,4,4
  24              		.comm	Xoffset,1,1
  25              		.comm	Yoffset,1,1
  26              		.comm	Zoffset,1,1
  27              		.comm	SR_reg,1,1
  28              		.global	SR_lock
  29              		.section	.bss.SR_lock,"aw",%nobits
  32              	SR_lock:
  33 0000 00       		.space	1
  34              		.section	.text.Cpu_INT_NMIInterrupt,"ax",%progbits
  35              		.align	2
  36              		.global	Cpu_INT_NMIInterrupt
  37              		.code	16
  38              		.thumb_func
  40              	Cpu_INT_NMIInterrupt:
  41              	.LFB0:
  42              		.file 1 "../Generated_Code/Cpu.c"
   1:../Generated_Code/Cpu.c **** /* ###################################################################
   2:../Generated_Code/Cpu.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/Cpu.c **** **     Filename    : Cpu.c
   4:../Generated_Code/Cpu.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/Cpu.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/Cpu.c **** **     Component   : MKL25Z128LK4
   7:../Generated_Code/Cpu.c **** **     Version     : Component 01.025, Driver 01.04, CPU db: 3.00.000
   8:../Generated_Code/Cpu.c **** **     Datasheet   : KL25P80M48SF0RM, Rev.3, Sep 2012
   9:../Generated_Code/Cpu.c **** **     Compiler    : GNU C Compiler
  10:../Generated_Code/Cpu.c **** **     Date/Time   : 2018-06-19, 12:44, # CodeGen: 78
  11:../Generated_Code/Cpu.c **** **     Abstract    :
  12:../Generated_Code/Cpu.c **** **
  13:../Generated_Code/Cpu.c **** **     Settings    :
  14:../Generated_Code/Cpu.c **** **
  15:../Generated_Code/Cpu.c **** **     Contents    :
  16:../Generated_Code/Cpu.c **** **         No public methods
  17:../Generated_Code/Cpu.c **** **
  18:../Generated_Code/Cpu.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  19:../Generated_Code/Cpu.c **** **     All Rights Reserved.
  20:../Generated_Code/Cpu.c **** **     
  21:../Generated_Code/Cpu.c **** **     Redistribution and use in source and binary forms, with or without modification,
  22:../Generated_Code/Cpu.c **** **     are permitted provided that the following conditions are met:
  23:../Generated_Code/Cpu.c **** **     
  24:../Generated_Code/Cpu.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  25:../Generated_Code/Cpu.c **** **       of conditions and the following disclaimer.
  26:../Generated_Code/Cpu.c **** **     
  27:../Generated_Code/Cpu.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  28:../Generated_Code/Cpu.c **** **       list of conditions and the following disclaimer in the documentation and/or
  29:../Generated_Code/Cpu.c **** **       other materials provided with the distribution.
  30:../Generated_Code/Cpu.c **** **     
  31:../Generated_Code/Cpu.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  32:../Generated_Code/Cpu.c **** **       contributors may be used to endorse or promote products derived from this
  33:../Generated_Code/Cpu.c **** **       software without specific prior written permission.
  34:../Generated_Code/Cpu.c **** **     
  35:../Generated_Code/Cpu.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  36:../Generated_Code/Cpu.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  37:../Generated_Code/Cpu.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:../Generated_Code/Cpu.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  39:../Generated_Code/Cpu.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  40:../Generated_Code/Cpu.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  41:../Generated_Code/Cpu.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  42:../Generated_Code/Cpu.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  43:../Generated_Code/Cpu.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  44:../Generated_Code/Cpu.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:../Generated_Code/Cpu.c **** **     
  46:../Generated_Code/Cpu.c **** **     http: www.freescale.com
  47:../Generated_Code/Cpu.c **** **     mail: support@freescale.com
  48:../Generated_Code/Cpu.c **** ** ###################################################################*/
  49:../Generated_Code/Cpu.c **** /*!
  50:../Generated_Code/Cpu.c **** ** @file Cpu.c
  51:../Generated_Code/Cpu.c **** ** @version 01.04
  52:../Generated_Code/Cpu.c **** ** @brief
  53:../Generated_Code/Cpu.c **** **
  54:../Generated_Code/Cpu.c **** */         
  55:../Generated_Code/Cpu.c **** /*!
  56:../Generated_Code/Cpu.c **** **  @addtogroup Cpu_module Cpu module documentation
  57:../Generated_Code/Cpu.c **** **  @{
  58:../Generated_Code/Cpu.c **** */         
  59:../Generated_Code/Cpu.c **** 
  60:../Generated_Code/Cpu.c **** /* MODULE Cpu. */
  61:../Generated_Code/Cpu.c **** 
  62:../Generated_Code/Cpu.c **** /* {Default RTOS Adapter} No RTOS includes */
  63:../Generated_Code/Cpu.c **** #include "TRIG.h"
  64:../Generated_Code/Cpu.c **** #include "TU1.h"
  65:../Generated_Code/Cpu.c **** #include "UTIL1.h"
  66:../Generated_Code/Cpu.c **** #include "MCUC1.h"
  67:../Generated_Code/Cpu.c **** #include "WAIT1.h"
  68:../Generated_Code/Cpu.c **** #include "LEDG.h"
  69:../Generated_Code/Cpu.c **** #include "LEDpin2.h"
  70:../Generated_Code/Cpu.c **** #include "BitIoLdd1.h"
  71:../Generated_Code/Cpu.c **** #include "LEDB.h"
  72:../Generated_Code/Cpu.c **** #include "LEDpin3.h"
  73:../Generated_Code/Cpu.c **** #include "BitIoLdd2.h"
  74:../Generated_Code/Cpu.c **** #include "Acc.h"
  75:../Generated_Code/Cpu.c **** #include "ExtIntLdd1.h"
  76:../Generated_Code/Cpu.c **** #include "ST1.h"
  77:../Generated_Code/Cpu.c **** #include "LEDR.h"
  78:../Generated_Code/Cpu.c **** #include "LEDpin1.h"
  79:../Generated_Code/Cpu.c **** #include "BitIoLdd3.h"
  80:../Generated_Code/Cpu.c **** #include "PE_Types.h"
  81:../Generated_Code/Cpu.c **** #include "PE_Error.h"
  82:../Generated_Code/Cpu.c **** #include "PE_Const.h"
  83:../Generated_Code/Cpu.c **** #include "IO_Map.h"
  84:../Generated_Code/Cpu.c **** #include "Events.h"
  85:../Generated_Code/Cpu.c **** #include "Cpu.h"
  86:../Generated_Code/Cpu.c **** 
  87:../Generated_Code/Cpu.c **** #ifdef __cplusplus
  88:../Generated_Code/Cpu.c **** extern "C" {
  89:../Generated_Code/Cpu.c **** #endif
  90:../Generated_Code/Cpu.c **** 
  91:../Generated_Code/Cpu.c **** /* Global variables */
  92:../Generated_Code/Cpu.c **** volatile uint8_t SR_reg;               /* Current value of the FAULTMASK register */
  93:../Generated_Code/Cpu.c **** volatile uint8_t SR_lock = 0x00U;      /* Lock */
  94:../Generated_Code/Cpu.c **** 
  95:../Generated_Code/Cpu.c **** 
  96:../Generated_Code/Cpu.c **** /*
  97:../Generated_Code/Cpu.c **** ** ===================================================================
  98:../Generated_Code/Cpu.c **** **     Method      :  Cpu_INT_NMIInterrupt (component MKL25Z128LK4)
  99:../Generated_Code/Cpu.c **** **
 100:../Generated_Code/Cpu.c **** **     Description :
 101:../Generated_Code/Cpu.c **** **         This ISR services the Non Maskable Interrupt interrupt.
 102:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 103:../Generated_Code/Cpu.c **** ** ===================================================================
 104:../Generated_Code/Cpu.c **** */
 105:../Generated_Code/Cpu.c **** PE_ISR(Cpu_INT_NMIInterrupt)
 106:../Generated_Code/Cpu.c **** {
  43              		.loc 1 106 0
  44              		.cfi_startproc
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
 107:../Generated_Code/Cpu.c ****   Cpu_OnNMIINT();
  53              		.loc 1 107 0
  54 0004 FFF7FEFF 		bl	Cpu_OnNMIINT
 108:../Generated_Code/Cpu.c **** }
  55              		.loc 1 108 0
  56 0008 BD46     		mov	sp, r7
  57              		@ sp needed for prologue
  58 000a 80BD     		pop	{r7, pc}
  59              		.cfi_endproc
  60              	.LFE0:
  62              		.section	.text.Cpu_ivINT_Hard_Fault,"ax",%progbits
  63              		.align	2
  64              		.global	Cpu_ivINT_Hard_Fault
  65              		.code	16
  66              		.thumb_func
  68              	Cpu_ivINT_Hard_Fault:
  69              	.LFB1:
 109:../Generated_Code/Cpu.c **** 
 110:../Generated_Code/Cpu.c **** /*
 111:../Generated_Code/Cpu.c **** ** ===================================================================
 112:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Hard_Fault (component MKL25Z128LK4)
 113:../Generated_Code/Cpu.c **** **
 114:../Generated_Code/Cpu.c **** **     Description :
 115:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 116:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 117:../Generated_Code/Cpu.c **** ** ===================================================================
 118:../Generated_Code/Cpu.c **** */
 119:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Hard_Fault)
 120:../Generated_Code/Cpu.c **** {
  70              		.loc 1 120 0
  71              		.cfi_startproc
  72 0000 80B5     		push	{r7, lr}
  73              	.LCFI2:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 7, -8
  76              		.cfi_offset 14, -4
  77 0002 00AF     		add	r7, sp, #0
  78              	.LCFI3:
  79              		.cfi_def_cfa_register 7
 121:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 122:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
  80              		.loc 1 122 0
  81              	@ 122 "../Generated_Code/Cpu.c" 1
  82 0004 FFBE     		BKPT 255
  83              	@ 0 "" 2
 123:../Generated_Code/Cpu.c **** }
  84              		.loc 1 123 0
  85              		.code	16
  86 0006 BD46     		mov	sp, r7
  87              		@ sp needed for prologue
  88 0008 80BD     		pop	{r7, pc}
  89              		.cfi_endproc
  90              	.LFE1:
  92 000a C046     		.section	.text.Cpu_ivINT_Reserved4,"ax",%progbits
  93              		.align	2
  94              		.global	Cpu_ivINT_Reserved4
  95              		.code	16
  96              		.thumb_func
  98              	Cpu_ivINT_Reserved4:
  99              	.LFB2:
 124:../Generated_Code/Cpu.c **** 
 125:../Generated_Code/Cpu.c **** /*
 126:../Generated_Code/Cpu.c **** ** ===================================================================
 127:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved4 (component MKL25Z128LK4)
 128:../Generated_Code/Cpu.c **** **
 129:../Generated_Code/Cpu.c **** **     Description :
 130:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 131:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 132:../Generated_Code/Cpu.c **** ** ===================================================================
 133:../Generated_Code/Cpu.c **** */
 134:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved4)
 135:../Generated_Code/Cpu.c **** {
 100              		.loc 1 135 0
 101              		.cfi_startproc
 102 0000 80B5     		push	{r7, lr}
 103              	.LCFI4:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 00AF     		add	r7, sp, #0
 108              	.LCFI5:
 109              		.cfi_def_cfa_register 7
 136:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 137:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 110              		.loc 1 137 0
 111              	@ 137 "../Generated_Code/Cpu.c" 1
 112 0004 FFBE     		BKPT 255
 113              	@ 0 "" 2
 138:../Generated_Code/Cpu.c **** }
 114              		.loc 1 138 0
 115              		.code	16
 116 0006 BD46     		mov	sp, r7
 117              		@ sp needed for prologue
 118 0008 80BD     		pop	{r7, pc}
 119              		.cfi_endproc
 120              	.LFE2:
 122 000a C046     		.section	.text.Cpu_ivINT_Reserved5,"ax",%progbits
 123              		.align	2
 124              		.global	Cpu_ivINT_Reserved5
 125              		.code	16
 126              		.thumb_func
 128              	Cpu_ivINT_Reserved5:
 129              	.LFB3:
 139:../Generated_Code/Cpu.c **** 
 140:../Generated_Code/Cpu.c **** /*
 141:../Generated_Code/Cpu.c **** ** ===================================================================
 142:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved5 (component MKL25Z128LK4)
 143:../Generated_Code/Cpu.c **** **
 144:../Generated_Code/Cpu.c **** **     Description :
 145:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 146:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 147:../Generated_Code/Cpu.c **** ** ===================================================================
 148:../Generated_Code/Cpu.c **** */
 149:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved5)
 150:../Generated_Code/Cpu.c **** {
 130              		.loc 1 150 0
 131              		.cfi_startproc
 132 0000 80B5     		push	{r7, lr}
 133              	.LCFI6:
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 7, -8
 136              		.cfi_offset 14, -4
 137 0002 00AF     		add	r7, sp, #0
 138              	.LCFI7:
 139              		.cfi_def_cfa_register 7
 151:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 152:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 140              		.loc 1 152 0
 141              	@ 152 "../Generated_Code/Cpu.c" 1
 142 0004 FFBE     		BKPT 255
 143              	@ 0 "" 2
 153:../Generated_Code/Cpu.c **** }
 144              		.loc 1 153 0
 145              		.code	16
 146 0006 BD46     		mov	sp, r7
 147              		@ sp needed for prologue
 148 0008 80BD     		pop	{r7, pc}
 149              		.cfi_endproc
 150              	.LFE3:
 152 000a C046     		.section	.text.Cpu_ivINT_Reserved6,"ax",%progbits
 153              		.align	2
 154              		.global	Cpu_ivINT_Reserved6
 155              		.code	16
 156              		.thumb_func
 158              	Cpu_ivINT_Reserved6:
 159              	.LFB4:
 154:../Generated_Code/Cpu.c **** 
 155:../Generated_Code/Cpu.c **** /*
 156:../Generated_Code/Cpu.c **** ** ===================================================================
 157:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved6 (component MKL25Z128LK4)
 158:../Generated_Code/Cpu.c **** **
 159:../Generated_Code/Cpu.c **** **     Description :
 160:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 161:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 162:../Generated_Code/Cpu.c **** ** ===================================================================
 163:../Generated_Code/Cpu.c **** */
 164:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved6)
 165:../Generated_Code/Cpu.c **** {
 160              		.loc 1 165 0
 161              		.cfi_startproc
 162 0000 80B5     		push	{r7, lr}
 163              	.LCFI8:
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              	.LCFI9:
 169              		.cfi_def_cfa_register 7
 166:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 167:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 170              		.loc 1 167 0
 171              	@ 167 "../Generated_Code/Cpu.c" 1
 172 0004 FFBE     		BKPT 255
 173              	@ 0 "" 2
 168:../Generated_Code/Cpu.c **** }
 174              		.loc 1 168 0
 175              		.code	16
 176 0006 BD46     		mov	sp, r7
 177              		@ sp needed for prologue
 178 0008 80BD     		pop	{r7, pc}
 179              		.cfi_endproc
 180              	.LFE4:
 182 000a C046     		.section	.text.Cpu_ivINT_Reserved7,"ax",%progbits
 183              		.align	2
 184              		.global	Cpu_ivINT_Reserved7
 185              		.code	16
 186              		.thumb_func
 188              	Cpu_ivINT_Reserved7:
 189              	.LFB5:
 169:../Generated_Code/Cpu.c **** 
 170:../Generated_Code/Cpu.c **** /*
 171:../Generated_Code/Cpu.c **** ** ===================================================================
 172:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved7 (component MKL25Z128LK4)
 173:../Generated_Code/Cpu.c **** **
 174:../Generated_Code/Cpu.c **** **     Description :
 175:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 176:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 177:../Generated_Code/Cpu.c **** ** ===================================================================
 178:../Generated_Code/Cpu.c **** */
 179:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved7)
 180:../Generated_Code/Cpu.c **** {
 190              		.loc 1 180 0
 191              		.cfi_startproc
 192 0000 80B5     		push	{r7, lr}
 193              	.LCFI10:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 00AF     		add	r7, sp, #0
 198              	.LCFI11:
 199              		.cfi_def_cfa_register 7
 181:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 182:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 200              		.loc 1 182 0
 201              	@ 182 "../Generated_Code/Cpu.c" 1
 202 0004 FFBE     		BKPT 255
 203              	@ 0 "" 2
 183:../Generated_Code/Cpu.c **** }
 204              		.loc 1 183 0
 205              		.code	16
 206 0006 BD46     		mov	sp, r7
 207              		@ sp needed for prologue
 208 0008 80BD     		pop	{r7, pc}
 209              		.cfi_endproc
 210              	.LFE5:
 212 000a C046     		.section	.text.Cpu_ivINT_Reserved8,"ax",%progbits
 213              		.align	2
 214              		.global	Cpu_ivINT_Reserved8
 215              		.code	16
 216              		.thumb_func
 218              	Cpu_ivINT_Reserved8:
 219              	.LFB6:
 184:../Generated_Code/Cpu.c **** 
 185:../Generated_Code/Cpu.c **** /*
 186:../Generated_Code/Cpu.c **** ** ===================================================================
 187:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved8 (component MKL25Z128LK4)
 188:../Generated_Code/Cpu.c **** **
 189:../Generated_Code/Cpu.c **** **     Description :
 190:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 191:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 192:../Generated_Code/Cpu.c **** ** ===================================================================
 193:../Generated_Code/Cpu.c **** */
 194:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved8)
 195:../Generated_Code/Cpu.c **** {
 220              		.loc 1 195 0
 221              		.cfi_startproc
 222 0000 80B5     		push	{r7, lr}
 223              	.LCFI12:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 00AF     		add	r7, sp, #0
 228              	.LCFI13:
 229              		.cfi_def_cfa_register 7
 196:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 197:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 230              		.loc 1 197 0
 231              	@ 197 "../Generated_Code/Cpu.c" 1
 232 0004 FFBE     		BKPT 255
 233              	@ 0 "" 2
 198:../Generated_Code/Cpu.c **** }
 234              		.loc 1 198 0
 235              		.code	16
 236 0006 BD46     		mov	sp, r7
 237              		@ sp needed for prologue
 238 0008 80BD     		pop	{r7, pc}
 239              		.cfi_endproc
 240              	.LFE6:
 242 000a C046     		.section	.text.Cpu_ivINT_Reserved9,"ax",%progbits
 243              		.align	2
 244              		.global	Cpu_ivINT_Reserved9
 245              		.code	16
 246              		.thumb_func
 248              	Cpu_ivINT_Reserved9:
 249              	.LFB7:
 199:../Generated_Code/Cpu.c **** 
 200:../Generated_Code/Cpu.c **** /*
 201:../Generated_Code/Cpu.c **** ** ===================================================================
 202:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved9 (component MKL25Z128LK4)
 203:../Generated_Code/Cpu.c **** **
 204:../Generated_Code/Cpu.c **** **     Description :
 205:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 206:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 207:../Generated_Code/Cpu.c **** ** ===================================================================
 208:../Generated_Code/Cpu.c **** */
 209:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved9)
 210:../Generated_Code/Cpu.c **** {
 250              		.loc 1 210 0
 251              		.cfi_startproc
 252 0000 80B5     		push	{r7, lr}
 253              	.LCFI14:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 00AF     		add	r7, sp, #0
 258              	.LCFI15:
 259              		.cfi_def_cfa_register 7
 211:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 212:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 260              		.loc 1 212 0
 261              	@ 212 "../Generated_Code/Cpu.c" 1
 262 0004 FFBE     		BKPT 255
 263              	@ 0 "" 2
 213:../Generated_Code/Cpu.c **** }
 264              		.loc 1 213 0
 265              		.code	16
 266 0006 BD46     		mov	sp, r7
 267              		@ sp needed for prologue
 268 0008 80BD     		pop	{r7, pc}
 269              		.cfi_endproc
 270              	.LFE7:
 272 000a C046     		.section	.text.Cpu_ivINT_Reserved10,"ax",%progbits
 273              		.align	2
 274              		.global	Cpu_ivINT_Reserved10
 275              		.code	16
 276              		.thumb_func
 278              	Cpu_ivINT_Reserved10:
 279              	.LFB8:
 214:../Generated_Code/Cpu.c **** 
 215:../Generated_Code/Cpu.c **** /*
 216:../Generated_Code/Cpu.c **** ** ===================================================================
 217:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved10 (component MKL25Z128LK4)
 218:../Generated_Code/Cpu.c **** **
 219:../Generated_Code/Cpu.c **** **     Description :
 220:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 221:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 222:../Generated_Code/Cpu.c **** ** ===================================================================
 223:../Generated_Code/Cpu.c **** */
 224:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved10)
 225:../Generated_Code/Cpu.c **** {
 280              		.loc 1 225 0
 281              		.cfi_startproc
 282 0000 80B5     		push	{r7, lr}
 283              	.LCFI16:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 00AF     		add	r7, sp, #0
 288              	.LCFI17:
 289              		.cfi_def_cfa_register 7
 226:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 227:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 290              		.loc 1 227 0
 291              	@ 227 "../Generated_Code/Cpu.c" 1
 292 0004 FFBE     		BKPT 255
 293              	@ 0 "" 2
 228:../Generated_Code/Cpu.c **** }
 294              		.loc 1 228 0
 295              		.code	16
 296 0006 BD46     		mov	sp, r7
 297              		@ sp needed for prologue
 298 0008 80BD     		pop	{r7, pc}
 299              		.cfi_endproc
 300              	.LFE8:
 302 000a C046     		.section	.text.Cpu_ivINT_SVCall,"ax",%progbits
 303              		.align	2
 304              		.global	Cpu_ivINT_SVCall
 305              		.code	16
 306              		.thumb_func
 308              	Cpu_ivINT_SVCall:
 309              	.LFB9:
 229:../Generated_Code/Cpu.c **** 
 230:../Generated_Code/Cpu.c **** /*
 231:../Generated_Code/Cpu.c **** ** ===================================================================
 232:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_SVCall (component MKL25Z128LK4)
 233:../Generated_Code/Cpu.c **** **
 234:../Generated_Code/Cpu.c **** **     Description :
 235:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 236:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 237:../Generated_Code/Cpu.c **** ** ===================================================================
 238:../Generated_Code/Cpu.c **** */
 239:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_SVCall)
 240:../Generated_Code/Cpu.c **** {
 310              		.loc 1 240 0
 311              		.cfi_startproc
 312 0000 80B5     		push	{r7, lr}
 313              	.LCFI18:
 314              		.cfi_def_cfa_offset 8
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 00AF     		add	r7, sp, #0
 318              	.LCFI19:
 319              		.cfi_def_cfa_register 7
 241:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 242:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 320              		.loc 1 242 0
 321              	@ 242 "../Generated_Code/Cpu.c" 1
 322 0004 FFBE     		BKPT 255
 323              	@ 0 "" 2
 243:../Generated_Code/Cpu.c **** }
 324              		.loc 1 243 0
 325              		.code	16
 326 0006 BD46     		mov	sp, r7
 327              		@ sp needed for prologue
 328 0008 80BD     		pop	{r7, pc}
 329              		.cfi_endproc
 330              	.LFE9:
 332 000a C046     		.section	.text.Cpu_ivINT_Reserved12,"ax",%progbits
 333              		.align	2
 334              		.global	Cpu_ivINT_Reserved12
 335              		.code	16
 336              		.thumb_func
 338              	Cpu_ivINT_Reserved12:
 339              	.LFB10:
 244:../Generated_Code/Cpu.c **** 
 245:../Generated_Code/Cpu.c **** /*
 246:../Generated_Code/Cpu.c **** ** ===================================================================
 247:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved12 (component MKL25Z128LK4)
 248:../Generated_Code/Cpu.c **** **
 249:../Generated_Code/Cpu.c **** **     Description :
 250:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 251:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 252:../Generated_Code/Cpu.c **** ** ===================================================================
 253:../Generated_Code/Cpu.c **** */
 254:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved12)
 255:../Generated_Code/Cpu.c **** {
 340              		.loc 1 255 0
 341              		.cfi_startproc
 342 0000 80B5     		push	{r7, lr}
 343              	.LCFI20:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 00AF     		add	r7, sp, #0
 348              	.LCFI21:
 349              		.cfi_def_cfa_register 7
 256:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 257:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 350              		.loc 1 257 0
 351              	@ 257 "../Generated_Code/Cpu.c" 1
 352 0004 FFBE     		BKPT 255
 353              	@ 0 "" 2
 258:../Generated_Code/Cpu.c **** }
 354              		.loc 1 258 0
 355              		.code	16
 356 0006 BD46     		mov	sp, r7
 357              		@ sp needed for prologue
 358 0008 80BD     		pop	{r7, pc}
 359              		.cfi_endproc
 360              	.LFE10:
 362 000a C046     		.section	.text.Cpu_ivINT_Reserved13,"ax",%progbits
 363              		.align	2
 364              		.global	Cpu_ivINT_Reserved13
 365              		.code	16
 366              		.thumb_func
 368              	Cpu_ivINT_Reserved13:
 369              	.LFB11:
 259:../Generated_Code/Cpu.c **** 
 260:../Generated_Code/Cpu.c **** /*
 261:../Generated_Code/Cpu.c **** ** ===================================================================
 262:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved13 (component MKL25Z128LK4)
 263:../Generated_Code/Cpu.c **** **
 264:../Generated_Code/Cpu.c **** **     Description :
 265:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 266:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 267:../Generated_Code/Cpu.c **** ** ===================================================================
 268:../Generated_Code/Cpu.c **** */
 269:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved13)
 270:../Generated_Code/Cpu.c **** {
 370              		.loc 1 270 0
 371              		.cfi_startproc
 372 0000 80B5     		push	{r7, lr}
 373              	.LCFI22:
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 377 0002 00AF     		add	r7, sp, #0
 378              	.LCFI23:
 379              		.cfi_def_cfa_register 7
 271:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 272:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 380              		.loc 1 272 0
 381              	@ 272 "../Generated_Code/Cpu.c" 1
 382 0004 FFBE     		BKPT 255
 383              	@ 0 "" 2
 273:../Generated_Code/Cpu.c **** }
 384              		.loc 1 273 0
 385              		.code	16
 386 0006 BD46     		mov	sp, r7
 387              		@ sp needed for prologue
 388 0008 80BD     		pop	{r7, pc}
 389              		.cfi_endproc
 390              	.LFE11:
 392 000a C046     		.section	.text.Cpu_ivINT_PendableSrvReq,"ax",%progbits
 393              		.align	2
 394              		.global	Cpu_ivINT_PendableSrvReq
 395              		.code	16
 396              		.thumb_func
 398              	Cpu_ivINT_PendableSrvReq:
 399              	.LFB12:
 274:../Generated_Code/Cpu.c **** 
 275:../Generated_Code/Cpu.c **** /*
 276:../Generated_Code/Cpu.c **** ** ===================================================================
 277:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_PendableSrvReq (component MKL25Z128LK4)
 278:../Generated_Code/Cpu.c **** **
 279:../Generated_Code/Cpu.c **** **     Description :
 280:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 281:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 282:../Generated_Code/Cpu.c **** ** ===================================================================
 283:../Generated_Code/Cpu.c **** */
 284:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_PendableSrvReq)
 285:../Generated_Code/Cpu.c **** {
 400              		.loc 1 285 0
 401              		.cfi_startproc
 402 0000 80B5     		push	{r7, lr}
 403              	.LCFI24:
 404              		.cfi_def_cfa_offset 8
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 00AF     		add	r7, sp, #0
 408              	.LCFI25:
 409              		.cfi_def_cfa_register 7
 286:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 287:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 410              		.loc 1 287 0
 411              	@ 287 "../Generated_Code/Cpu.c" 1
 412 0004 FFBE     		BKPT 255
 413              	@ 0 "" 2
 288:../Generated_Code/Cpu.c **** }
 414              		.loc 1 288 0
 415              		.code	16
 416 0006 BD46     		mov	sp, r7
 417              		@ sp needed for prologue
 418 0008 80BD     		pop	{r7, pc}
 419              		.cfi_endproc
 420              	.LFE12:
 422 000a C046     		.section	.text.Cpu_ivINT_DMA0,"ax",%progbits
 423              		.align	2
 424              		.global	Cpu_ivINT_DMA0
 425              		.code	16
 426              		.thumb_func
 428              	Cpu_ivINT_DMA0:
 429              	.LFB13:
 289:../Generated_Code/Cpu.c **** 
 290:../Generated_Code/Cpu.c **** /*
 291:../Generated_Code/Cpu.c **** ** ===================================================================
 292:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_DMA0 (component MKL25Z128LK4)
 293:../Generated_Code/Cpu.c **** **
 294:../Generated_Code/Cpu.c **** **     Description :
 295:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 296:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 297:../Generated_Code/Cpu.c **** ** ===================================================================
 298:../Generated_Code/Cpu.c **** */
 299:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_DMA0)
 300:../Generated_Code/Cpu.c **** {
 430              		.loc 1 300 0
 431              		.cfi_startproc
 432 0000 80B5     		push	{r7, lr}
 433              	.LCFI26:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 00AF     		add	r7, sp, #0
 438              	.LCFI27:
 439              		.cfi_def_cfa_register 7
 301:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 302:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 440              		.loc 1 302 0
 441              	@ 302 "../Generated_Code/Cpu.c" 1
 442 0004 FFBE     		BKPT 255
 443              	@ 0 "" 2
 303:../Generated_Code/Cpu.c **** }
 444              		.loc 1 303 0
 445              		.code	16
 446 0006 BD46     		mov	sp, r7
 447              		@ sp needed for prologue
 448 0008 80BD     		pop	{r7, pc}
 449              		.cfi_endproc
 450              	.LFE13:
 452 000a C046     		.section	.text.Cpu_ivINT_DMA1,"ax",%progbits
 453              		.align	2
 454              		.global	Cpu_ivINT_DMA1
 455              		.code	16
 456              		.thumb_func
 458              	Cpu_ivINT_DMA1:
 459              	.LFB14:
 304:../Generated_Code/Cpu.c **** 
 305:../Generated_Code/Cpu.c **** /*
 306:../Generated_Code/Cpu.c **** ** ===================================================================
 307:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_DMA1 (component MKL25Z128LK4)
 308:../Generated_Code/Cpu.c **** **
 309:../Generated_Code/Cpu.c **** **     Description :
 310:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 311:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 312:../Generated_Code/Cpu.c **** ** ===================================================================
 313:../Generated_Code/Cpu.c **** */
 314:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_DMA1)
 315:../Generated_Code/Cpu.c **** {
 460              		.loc 1 315 0
 461              		.cfi_startproc
 462 0000 80B5     		push	{r7, lr}
 463              	.LCFI28:
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 7, -8
 466              		.cfi_offset 14, -4
 467 0002 00AF     		add	r7, sp, #0
 468              	.LCFI29:
 469              		.cfi_def_cfa_register 7
 316:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 317:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 470              		.loc 1 317 0
 471              	@ 317 "../Generated_Code/Cpu.c" 1
 472 0004 FFBE     		BKPT 255
 473              	@ 0 "" 2
 318:../Generated_Code/Cpu.c **** }
 474              		.loc 1 318 0
 475              		.code	16
 476 0006 BD46     		mov	sp, r7
 477              		@ sp needed for prologue
 478 0008 80BD     		pop	{r7, pc}
 479              		.cfi_endproc
 480              	.LFE14:
 482 000a C046     		.section	.text.Cpu_ivINT_DMA2,"ax",%progbits
 483              		.align	2
 484              		.global	Cpu_ivINT_DMA2
 485              		.code	16
 486              		.thumb_func
 488              	Cpu_ivINT_DMA2:
 489              	.LFB15:
 319:../Generated_Code/Cpu.c **** 
 320:../Generated_Code/Cpu.c **** /*
 321:../Generated_Code/Cpu.c **** ** ===================================================================
 322:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_DMA2 (component MKL25Z128LK4)
 323:../Generated_Code/Cpu.c **** **
 324:../Generated_Code/Cpu.c **** **     Description :
 325:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 326:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 327:../Generated_Code/Cpu.c **** ** ===================================================================
 328:../Generated_Code/Cpu.c **** */
 329:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_DMA2)
 330:../Generated_Code/Cpu.c **** {
 490              		.loc 1 330 0
 491              		.cfi_startproc
 492 0000 80B5     		push	{r7, lr}
 493              	.LCFI30:
 494              		.cfi_def_cfa_offset 8
 495              		.cfi_offset 7, -8
 496              		.cfi_offset 14, -4
 497 0002 00AF     		add	r7, sp, #0
 498              	.LCFI31:
 499              		.cfi_def_cfa_register 7
 331:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 332:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 500              		.loc 1 332 0
 501              	@ 332 "../Generated_Code/Cpu.c" 1
 502 0004 FFBE     		BKPT 255
 503              	@ 0 "" 2
 333:../Generated_Code/Cpu.c **** }
 504              		.loc 1 333 0
 505              		.code	16
 506 0006 BD46     		mov	sp, r7
 507              		@ sp needed for prologue
 508 0008 80BD     		pop	{r7, pc}
 509              		.cfi_endproc
 510              	.LFE15:
 512 000a C046     		.section	.text.Cpu_ivINT_DMA3,"ax",%progbits
 513              		.align	2
 514              		.global	Cpu_ivINT_DMA3
 515              		.code	16
 516              		.thumb_func
 518              	Cpu_ivINT_DMA3:
 519              	.LFB16:
 334:../Generated_Code/Cpu.c **** 
 335:../Generated_Code/Cpu.c **** /*
 336:../Generated_Code/Cpu.c **** ** ===================================================================
 337:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_DMA3 (component MKL25Z128LK4)
 338:../Generated_Code/Cpu.c **** **
 339:../Generated_Code/Cpu.c **** **     Description :
 340:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 341:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 342:../Generated_Code/Cpu.c **** ** ===================================================================
 343:../Generated_Code/Cpu.c **** */
 344:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_DMA3)
 345:../Generated_Code/Cpu.c **** {
 520              		.loc 1 345 0
 521              		.cfi_startproc
 522 0000 80B5     		push	{r7, lr}
 523              	.LCFI32:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 7, -8
 526              		.cfi_offset 14, -4
 527 0002 00AF     		add	r7, sp, #0
 528              	.LCFI33:
 529              		.cfi_def_cfa_register 7
 346:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 347:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 530              		.loc 1 347 0
 531              	@ 347 "../Generated_Code/Cpu.c" 1
 532 0004 FFBE     		BKPT 255
 533              	@ 0 "" 2
 348:../Generated_Code/Cpu.c **** }
 534              		.loc 1 348 0
 535              		.code	16
 536 0006 BD46     		mov	sp, r7
 537              		@ sp needed for prologue
 538 0008 80BD     		pop	{r7, pc}
 539              		.cfi_endproc
 540              	.LFE16:
 542 000a C046     		.section	.text.Cpu_ivINT_Reserved20,"ax",%progbits
 543              		.align	2
 544              		.global	Cpu_ivINT_Reserved20
 545              		.code	16
 546              		.thumb_func
 548              	Cpu_ivINT_Reserved20:
 549              	.LFB17:
 349:../Generated_Code/Cpu.c **** 
 350:../Generated_Code/Cpu.c **** /*
 351:../Generated_Code/Cpu.c **** ** ===================================================================
 352:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved20 (component MKL25Z128LK4)
 353:../Generated_Code/Cpu.c **** **
 354:../Generated_Code/Cpu.c **** **     Description :
 355:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 356:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 357:../Generated_Code/Cpu.c **** ** ===================================================================
 358:../Generated_Code/Cpu.c **** */
 359:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved20)
 360:../Generated_Code/Cpu.c **** {
 550              		.loc 1 360 0
 551              		.cfi_startproc
 552 0000 80B5     		push	{r7, lr}
 553              	.LCFI34:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557 0002 00AF     		add	r7, sp, #0
 558              	.LCFI35:
 559              		.cfi_def_cfa_register 7
 361:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 362:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 560              		.loc 1 362 0
 561              	@ 362 "../Generated_Code/Cpu.c" 1
 562 0004 FFBE     		BKPT 255
 563              	@ 0 "" 2
 363:../Generated_Code/Cpu.c **** }
 564              		.loc 1 363 0
 565              		.code	16
 566 0006 BD46     		mov	sp, r7
 567              		@ sp needed for prologue
 568 0008 80BD     		pop	{r7, pc}
 569              		.cfi_endproc
 570              	.LFE17:
 572 000a C046     		.section	.text.Cpu_ivINT_FTFA,"ax",%progbits
 573              		.align	2
 574              		.global	Cpu_ivINT_FTFA
 575              		.code	16
 576              		.thumb_func
 578              	Cpu_ivINT_FTFA:
 579              	.LFB18:
 364:../Generated_Code/Cpu.c **** 
 365:../Generated_Code/Cpu.c **** /*
 366:../Generated_Code/Cpu.c **** ** ===================================================================
 367:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_FTFA (component MKL25Z128LK4)
 368:../Generated_Code/Cpu.c **** **
 369:../Generated_Code/Cpu.c **** **     Description :
 370:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 371:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 372:../Generated_Code/Cpu.c **** ** ===================================================================
 373:../Generated_Code/Cpu.c **** */
 374:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_FTFA)
 375:../Generated_Code/Cpu.c **** {
 580              		.loc 1 375 0
 581              		.cfi_startproc
 582 0000 80B5     		push	{r7, lr}
 583              	.LCFI36:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 7, -8
 586              		.cfi_offset 14, -4
 587 0002 00AF     		add	r7, sp, #0
 588              	.LCFI37:
 589              		.cfi_def_cfa_register 7
 376:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 377:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 590              		.loc 1 377 0
 591              	@ 377 "../Generated_Code/Cpu.c" 1
 592 0004 FFBE     		BKPT 255
 593              	@ 0 "" 2
 378:../Generated_Code/Cpu.c **** }
 594              		.loc 1 378 0
 595              		.code	16
 596 0006 BD46     		mov	sp, r7
 597              		@ sp needed for prologue
 598 0008 80BD     		pop	{r7, pc}
 599              		.cfi_endproc
 600              	.LFE18:
 602 000a C046     		.section	.text.Cpu_ivINT_LVD_LVW,"ax",%progbits
 603              		.align	2
 604              		.global	Cpu_ivINT_LVD_LVW
 605              		.code	16
 606              		.thumb_func
 608              	Cpu_ivINT_LVD_LVW:
 609              	.LFB19:
 379:../Generated_Code/Cpu.c **** 
 380:../Generated_Code/Cpu.c **** /*
 381:../Generated_Code/Cpu.c **** ** ===================================================================
 382:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_LVD_LVW (component MKL25Z128LK4)
 383:../Generated_Code/Cpu.c **** **
 384:../Generated_Code/Cpu.c **** **     Description :
 385:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 386:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 387:../Generated_Code/Cpu.c **** ** ===================================================================
 388:../Generated_Code/Cpu.c **** */
 389:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_LVD_LVW)
 390:../Generated_Code/Cpu.c **** {
 610              		.loc 1 390 0
 611              		.cfi_startproc
 612 0000 80B5     		push	{r7, lr}
 613              	.LCFI38:
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 7, -8
 616              		.cfi_offset 14, -4
 617 0002 00AF     		add	r7, sp, #0
 618              	.LCFI39:
 619              		.cfi_def_cfa_register 7
 391:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 392:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 620              		.loc 1 392 0
 621              	@ 392 "../Generated_Code/Cpu.c" 1
 622 0004 FFBE     		BKPT 255
 623              	@ 0 "" 2
 393:../Generated_Code/Cpu.c **** }
 624              		.loc 1 393 0
 625              		.code	16
 626 0006 BD46     		mov	sp, r7
 627              		@ sp needed for prologue
 628 0008 80BD     		pop	{r7, pc}
 629              		.cfi_endproc
 630              	.LFE19:
 632 000a C046     		.section	.text.Cpu_ivINT_LLW,"ax",%progbits
 633              		.align	2
 634              		.global	Cpu_ivINT_LLW
 635              		.code	16
 636              		.thumb_func
 638              	Cpu_ivINT_LLW:
 639              	.LFB20:
 394:../Generated_Code/Cpu.c **** 
 395:../Generated_Code/Cpu.c **** /*
 396:../Generated_Code/Cpu.c **** ** ===================================================================
 397:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_LLW (component MKL25Z128LK4)
 398:../Generated_Code/Cpu.c **** **
 399:../Generated_Code/Cpu.c **** **     Description :
 400:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 401:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 402:../Generated_Code/Cpu.c **** ** ===================================================================
 403:../Generated_Code/Cpu.c **** */
 404:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_LLW)
 405:../Generated_Code/Cpu.c **** {
 640              		.loc 1 405 0
 641              		.cfi_startproc
 642 0000 80B5     		push	{r7, lr}
 643              	.LCFI40:
 644              		.cfi_def_cfa_offset 8
 645              		.cfi_offset 7, -8
 646              		.cfi_offset 14, -4
 647 0002 00AF     		add	r7, sp, #0
 648              	.LCFI41:
 649              		.cfi_def_cfa_register 7
 406:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 407:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 650              		.loc 1 407 0
 651              	@ 407 "../Generated_Code/Cpu.c" 1
 652 0004 FFBE     		BKPT 255
 653              	@ 0 "" 2
 408:../Generated_Code/Cpu.c **** }
 654              		.loc 1 408 0
 655              		.code	16
 656 0006 BD46     		mov	sp, r7
 657              		@ sp needed for prologue
 658 0008 80BD     		pop	{r7, pc}
 659              		.cfi_endproc
 660              	.LFE20:
 662 000a C046     		.section	.text.Cpu_ivINT_I2C0,"ax",%progbits
 663              		.align	2
 664              		.global	Cpu_ivINT_I2C0
 665              		.code	16
 666              		.thumb_func
 668              	Cpu_ivINT_I2C0:
 669              	.LFB21:
 409:../Generated_Code/Cpu.c **** 
 410:../Generated_Code/Cpu.c **** /*
 411:../Generated_Code/Cpu.c **** ** ===================================================================
 412:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_I2C0 (component MKL25Z128LK4)
 413:../Generated_Code/Cpu.c **** **
 414:../Generated_Code/Cpu.c **** **     Description :
 415:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 416:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 417:../Generated_Code/Cpu.c **** ** ===================================================================
 418:../Generated_Code/Cpu.c **** */
 419:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_I2C0)
 420:../Generated_Code/Cpu.c **** {
 670              		.loc 1 420 0
 671              		.cfi_startproc
 672 0000 80B5     		push	{r7, lr}
 673              	.LCFI42:
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 00AF     		add	r7, sp, #0
 678              	.LCFI43:
 679              		.cfi_def_cfa_register 7
 421:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 422:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 680              		.loc 1 422 0
 681              	@ 422 "../Generated_Code/Cpu.c" 1
 682 0004 FFBE     		BKPT 255
 683              	@ 0 "" 2
 423:../Generated_Code/Cpu.c **** }
 684              		.loc 1 423 0
 685              		.code	16
 686 0006 BD46     		mov	sp, r7
 687              		@ sp needed for prologue
 688 0008 80BD     		pop	{r7, pc}
 689              		.cfi_endproc
 690              	.LFE21:
 692 000a C046     		.section	.text.Cpu_ivINT_I2C1,"ax",%progbits
 693              		.align	2
 694              		.global	Cpu_ivINT_I2C1
 695              		.code	16
 696              		.thumb_func
 698              	Cpu_ivINT_I2C1:
 699              	.LFB22:
 424:../Generated_Code/Cpu.c **** 
 425:../Generated_Code/Cpu.c **** /*
 426:../Generated_Code/Cpu.c **** ** ===================================================================
 427:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_I2C1 (component MKL25Z128LK4)
 428:../Generated_Code/Cpu.c **** **
 429:../Generated_Code/Cpu.c **** **     Description :
 430:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 431:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 432:../Generated_Code/Cpu.c **** ** ===================================================================
 433:../Generated_Code/Cpu.c **** */
 434:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_I2C1)
 435:../Generated_Code/Cpu.c **** {
 700              		.loc 1 435 0
 701              		.cfi_startproc
 702 0000 80B5     		push	{r7, lr}
 703              	.LCFI44:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 00AF     		add	r7, sp, #0
 708              	.LCFI45:
 709              		.cfi_def_cfa_register 7
 436:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 437:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 710              		.loc 1 437 0
 711              	@ 437 "../Generated_Code/Cpu.c" 1
 712 0004 FFBE     		BKPT 255
 713              	@ 0 "" 2
 438:../Generated_Code/Cpu.c **** }
 714              		.loc 1 438 0
 715              		.code	16
 716 0006 BD46     		mov	sp, r7
 717              		@ sp needed for prologue
 718 0008 80BD     		pop	{r7, pc}
 719              		.cfi_endproc
 720              	.LFE22:
 722 000a C046     		.section	.text.Cpu_ivINT_SPI0,"ax",%progbits
 723              		.align	2
 724              		.global	Cpu_ivINT_SPI0
 725              		.code	16
 726              		.thumb_func
 728              	Cpu_ivINT_SPI0:
 729              	.LFB23:
 439:../Generated_Code/Cpu.c **** 
 440:../Generated_Code/Cpu.c **** /*
 441:../Generated_Code/Cpu.c **** ** ===================================================================
 442:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_SPI0 (component MKL25Z128LK4)
 443:../Generated_Code/Cpu.c **** **
 444:../Generated_Code/Cpu.c **** **     Description :
 445:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 446:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 447:../Generated_Code/Cpu.c **** ** ===================================================================
 448:../Generated_Code/Cpu.c **** */
 449:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_SPI0)
 450:../Generated_Code/Cpu.c **** {
 730              		.loc 1 450 0
 731              		.cfi_startproc
 732 0000 80B5     		push	{r7, lr}
 733              	.LCFI46:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 00AF     		add	r7, sp, #0
 738              	.LCFI47:
 739              		.cfi_def_cfa_register 7
 451:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 452:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 740              		.loc 1 452 0
 741              	@ 452 "../Generated_Code/Cpu.c" 1
 742 0004 FFBE     		BKPT 255
 743              	@ 0 "" 2
 453:../Generated_Code/Cpu.c **** }
 744              		.loc 1 453 0
 745              		.code	16
 746 0006 BD46     		mov	sp, r7
 747              		@ sp needed for prologue
 748 0008 80BD     		pop	{r7, pc}
 749              		.cfi_endproc
 750              	.LFE23:
 752 000a C046     		.section	.text.Cpu_ivINT_SPI1,"ax",%progbits
 753              		.align	2
 754              		.global	Cpu_ivINT_SPI1
 755              		.code	16
 756              		.thumb_func
 758              	Cpu_ivINT_SPI1:
 759              	.LFB24:
 454:../Generated_Code/Cpu.c **** 
 455:../Generated_Code/Cpu.c **** /*
 456:../Generated_Code/Cpu.c **** ** ===================================================================
 457:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_SPI1 (component MKL25Z128LK4)
 458:../Generated_Code/Cpu.c **** **
 459:../Generated_Code/Cpu.c **** **     Description :
 460:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 461:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 462:../Generated_Code/Cpu.c **** ** ===================================================================
 463:../Generated_Code/Cpu.c **** */
 464:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_SPI1)
 465:../Generated_Code/Cpu.c **** {
 760              		.loc 1 465 0
 761              		.cfi_startproc
 762 0000 80B5     		push	{r7, lr}
 763              	.LCFI48:
 764              		.cfi_def_cfa_offset 8
 765              		.cfi_offset 7, -8
 766              		.cfi_offset 14, -4
 767 0002 00AF     		add	r7, sp, #0
 768              	.LCFI49:
 769              		.cfi_def_cfa_register 7
 466:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 467:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 770              		.loc 1 467 0
 771              	@ 467 "../Generated_Code/Cpu.c" 1
 772 0004 FFBE     		BKPT 255
 773              	@ 0 "" 2
 468:../Generated_Code/Cpu.c **** }
 774              		.loc 1 468 0
 775              		.code	16
 776 0006 BD46     		mov	sp, r7
 777              		@ sp needed for prologue
 778 0008 80BD     		pop	{r7, pc}
 779              		.cfi_endproc
 780              	.LFE24:
 782 000a C046     		.section	.text.Cpu_ivINT_UART0,"ax",%progbits
 783              		.align	2
 784              		.global	Cpu_ivINT_UART0
 785              		.code	16
 786              		.thumb_func
 788              	Cpu_ivINT_UART0:
 789              	.LFB25:
 469:../Generated_Code/Cpu.c **** 
 470:../Generated_Code/Cpu.c **** /*
 471:../Generated_Code/Cpu.c **** ** ===================================================================
 472:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_UART0 (component MKL25Z128LK4)
 473:../Generated_Code/Cpu.c **** **
 474:../Generated_Code/Cpu.c **** **     Description :
 475:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 476:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 477:../Generated_Code/Cpu.c **** ** ===================================================================
 478:../Generated_Code/Cpu.c **** */
 479:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_UART0)
 480:../Generated_Code/Cpu.c **** {
 790              		.loc 1 480 0
 791              		.cfi_startproc
 792 0000 80B5     		push	{r7, lr}
 793              	.LCFI50:
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 7, -8
 796              		.cfi_offset 14, -4
 797 0002 00AF     		add	r7, sp, #0
 798              	.LCFI51:
 799              		.cfi_def_cfa_register 7
 481:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 482:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 800              		.loc 1 482 0
 801              	@ 482 "../Generated_Code/Cpu.c" 1
 802 0004 FFBE     		BKPT 255
 803              	@ 0 "" 2
 483:../Generated_Code/Cpu.c **** }
 804              		.loc 1 483 0
 805              		.code	16
 806 0006 BD46     		mov	sp, r7
 807              		@ sp needed for prologue
 808 0008 80BD     		pop	{r7, pc}
 809              		.cfi_endproc
 810              	.LFE25:
 812 000a C046     		.section	.text.Cpu_ivINT_UART1,"ax",%progbits
 813              		.align	2
 814              		.global	Cpu_ivINT_UART1
 815              		.code	16
 816              		.thumb_func
 818              	Cpu_ivINT_UART1:
 819              	.LFB26:
 484:../Generated_Code/Cpu.c **** 
 485:../Generated_Code/Cpu.c **** /*
 486:../Generated_Code/Cpu.c **** ** ===================================================================
 487:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_UART1 (component MKL25Z128LK4)
 488:../Generated_Code/Cpu.c **** **
 489:../Generated_Code/Cpu.c **** **     Description :
 490:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 491:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 492:../Generated_Code/Cpu.c **** ** ===================================================================
 493:../Generated_Code/Cpu.c **** */
 494:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_UART1)
 495:../Generated_Code/Cpu.c **** {
 820              		.loc 1 495 0
 821              		.cfi_startproc
 822 0000 80B5     		push	{r7, lr}
 823              	.LCFI52:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 00AF     		add	r7, sp, #0
 828              	.LCFI53:
 829              		.cfi_def_cfa_register 7
 496:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 497:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 830              		.loc 1 497 0
 831              	@ 497 "../Generated_Code/Cpu.c" 1
 832 0004 FFBE     		BKPT 255
 833              	@ 0 "" 2
 498:../Generated_Code/Cpu.c **** }
 834              		.loc 1 498 0
 835              		.code	16
 836 0006 BD46     		mov	sp, r7
 837              		@ sp needed for prologue
 838 0008 80BD     		pop	{r7, pc}
 839              		.cfi_endproc
 840              	.LFE26:
 842 000a C046     		.section	.text.Cpu_ivINT_UART2,"ax",%progbits
 843              		.align	2
 844              		.global	Cpu_ivINT_UART2
 845              		.code	16
 846              		.thumb_func
 848              	Cpu_ivINT_UART2:
 849              	.LFB27:
 499:../Generated_Code/Cpu.c **** 
 500:../Generated_Code/Cpu.c **** /*
 501:../Generated_Code/Cpu.c **** ** ===================================================================
 502:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_UART2 (component MKL25Z128LK4)
 503:../Generated_Code/Cpu.c **** **
 504:../Generated_Code/Cpu.c **** **     Description :
 505:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 506:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 507:../Generated_Code/Cpu.c **** ** ===================================================================
 508:../Generated_Code/Cpu.c **** */
 509:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_UART2)
 510:../Generated_Code/Cpu.c **** {
 850              		.loc 1 510 0
 851              		.cfi_startproc
 852 0000 80B5     		push	{r7, lr}
 853              	.LCFI54:
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 00AF     		add	r7, sp, #0
 858              	.LCFI55:
 859              		.cfi_def_cfa_register 7
 511:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 512:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 860              		.loc 1 512 0
 861              	@ 512 "../Generated_Code/Cpu.c" 1
 862 0004 FFBE     		BKPT 255
 863              	@ 0 "" 2
 513:../Generated_Code/Cpu.c **** }
 864              		.loc 1 513 0
 865              		.code	16
 866 0006 BD46     		mov	sp, r7
 867              		@ sp needed for prologue
 868 0008 80BD     		pop	{r7, pc}
 869              		.cfi_endproc
 870              	.LFE27:
 872 000a C046     		.section	.text.Cpu_ivINT_ADC0,"ax",%progbits
 873              		.align	2
 874              		.global	Cpu_ivINT_ADC0
 875              		.code	16
 876              		.thumb_func
 878              	Cpu_ivINT_ADC0:
 879              	.LFB28:
 514:../Generated_Code/Cpu.c **** 
 515:../Generated_Code/Cpu.c **** /*
 516:../Generated_Code/Cpu.c **** ** ===================================================================
 517:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_ADC0 (component MKL25Z128LK4)
 518:../Generated_Code/Cpu.c **** **
 519:../Generated_Code/Cpu.c **** **     Description :
 520:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 521:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 522:../Generated_Code/Cpu.c **** ** ===================================================================
 523:../Generated_Code/Cpu.c **** */
 524:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_ADC0)
 525:../Generated_Code/Cpu.c **** {
 880              		.loc 1 525 0
 881              		.cfi_startproc
 882 0000 80B5     		push	{r7, lr}
 883              	.LCFI56:
 884              		.cfi_def_cfa_offset 8
 885              		.cfi_offset 7, -8
 886              		.cfi_offset 14, -4
 887 0002 00AF     		add	r7, sp, #0
 888              	.LCFI57:
 889              		.cfi_def_cfa_register 7
 526:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 527:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 890              		.loc 1 527 0
 891              	@ 527 "../Generated_Code/Cpu.c" 1
 892 0004 FFBE     		BKPT 255
 893              	@ 0 "" 2
 528:../Generated_Code/Cpu.c **** }
 894              		.loc 1 528 0
 895              		.code	16
 896 0006 BD46     		mov	sp, r7
 897              		@ sp needed for prologue
 898 0008 80BD     		pop	{r7, pc}
 899              		.cfi_endproc
 900              	.LFE28:
 902 000a C046     		.section	.text.Cpu_ivINT_CMP0,"ax",%progbits
 903              		.align	2
 904              		.global	Cpu_ivINT_CMP0
 905              		.code	16
 906              		.thumb_func
 908              	Cpu_ivINT_CMP0:
 909              	.LFB29:
 529:../Generated_Code/Cpu.c **** 
 530:../Generated_Code/Cpu.c **** /*
 531:../Generated_Code/Cpu.c **** ** ===================================================================
 532:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_CMP0 (component MKL25Z128LK4)
 533:../Generated_Code/Cpu.c **** **
 534:../Generated_Code/Cpu.c **** **     Description :
 535:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 536:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 537:../Generated_Code/Cpu.c **** ** ===================================================================
 538:../Generated_Code/Cpu.c **** */
 539:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_CMP0)
 540:../Generated_Code/Cpu.c **** {
 910              		.loc 1 540 0
 911              		.cfi_startproc
 912 0000 80B5     		push	{r7, lr}
 913              	.LCFI58:
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 00AF     		add	r7, sp, #0
 918              	.LCFI59:
 919              		.cfi_def_cfa_register 7
 541:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 542:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 920              		.loc 1 542 0
 921              	@ 542 "../Generated_Code/Cpu.c" 1
 922 0004 FFBE     		BKPT 255
 923              	@ 0 "" 2
 543:../Generated_Code/Cpu.c **** }
 924              		.loc 1 543 0
 925              		.code	16
 926 0006 BD46     		mov	sp, r7
 927              		@ sp needed for prologue
 928 0008 80BD     		pop	{r7, pc}
 929              		.cfi_endproc
 930              	.LFE29:
 932 000a C046     		.section	.text.Cpu_ivINT_TPM1,"ax",%progbits
 933              		.align	2
 934              		.global	Cpu_ivINT_TPM1
 935              		.code	16
 936              		.thumb_func
 938              	Cpu_ivINT_TPM1:
 939              	.LFB30:
 544:../Generated_Code/Cpu.c **** 
 545:../Generated_Code/Cpu.c **** /*
 546:../Generated_Code/Cpu.c **** ** ===================================================================
 547:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_TPM1 (component MKL25Z128LK4)
 548:../Generated_Code/Cpu.c **** **
 549:../Generated_Code/Cpu.c **** **     Description :
 550:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 551:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 552:../Generated_Code/Cpu.c **** ** ===================================================================
 553:../Generated_Code/Cpu.c **** */
 554:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_TPM1)
 555:../Generated_Code/Cpu.c **** {
 940              		.loc 1 555 0
 941              		.cfi_startproc
 942 0000 80B5     		push	{r7, lr}
 943              	.LCFI60:
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 7, -8
 946              		.cfi_offset 14, -4
 947 0002 00AF     		add	r7, sp, #0
 948              	.LCFI61:
 949              		.cfi_def_cfa_register 7
 556:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 557:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 950              		.loc 1 557 0
 951              	@ 557 "../Generated_Code/Cpu.c" 1
 952 0004 FFBE     		BKPT 255
 953              	@ 0 "" 2
 558:../Generated_Code/Cpu.c **** }
 954              		.loc 1 558 0
 955              		.code	16
 956 0006 BD46     		mov	sp, r7
 957              		@ sp needed for prologue
 958 0008 80BD     		pop	{r7, pc}
 959              		.cfi_endproc
 960              	.LFE30:
 962 000a C046     		.section	.text.Cpu_ivINT_TPM2,"ax",%progbits
 963              		.align	2
 964              		.global	Cpu_ivINT_TPM2
 965              		.code	16
 966              		.thumb_func
 968              	Cpu_ivINT_TPM2:
 969              	.LFB31:
 559:../Generated_Code/Cpu.c **** 
 560:../Generated_Code/Cpu.c **** /*
 561:../Generated_Code/Cpu.c **** ** ===================================================================
 562:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_TPM2 (component MKL25Z128LK4)
 563:../Generated_Code/Cpu.c **** **
 564:../Generated_Code/Cpu.c **** **     Description :
 565:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 566:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 567:../Generated_Code/Cpu.c **** ** ===================================================================
 568:../Generated_Code/Cpu.c **** */
 569:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_TPM2)
 570:../Generated_Code/Cpu.c **** {
 970              		.loc 1 570 0
 971              		.cfi_startproc
 972 0000 80B5     		push	{r7, lr}
 973              	.LCFI62:
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 7, -8
 976              		.cfi_offset 14, -4
 977 0002 00AF     		add	r7, sp, #0
 978              	.LCFI63:
 979              		.cfi_def_cfa_register 7
 571:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 572:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 980              		.loc 1 572 0
 981              	@ 572 "../Generated_Code/Cpu.c" 1
 982 0004 FFBE     		BKPT 255
 983              	@ 0 "" 2
 573:../Generated_Code/Cpu.c **** }
 984              		.loc 1 573 0
 985              		.code	16
 986 0006 BD46     		mov	sp, r7
 987              		@ sp needed for prologue
 988 0008 80BD     		pop	{r7, pc}
 989              		.cfi_endproc
 990              	.LFE31:
 992 000a C046     		.section	.text.Cpu_ivINT_RTC,"ax",%progbits
 993              		.align	2
 994              		.global	Cpu_ivINT_RTC
 995              		.code	16
 996              		.thumb_func
 998              	Cpu_ivINT_RTC:
 999              	.LFB32:
 574:../Generated_Code/Cpu.c **** 
 575:../Generated_Code/Cpu.c **** /*
 576:../Generated_Code/Cpu.c **** ** ===================================================================
 577:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_RTC (component MKL25Z128LK4)
 578:../Generated_Code/Cpu.c **** **
 579:../Generated_Code/Cpu.c **** **     Description :
 580:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 581:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 582:../Generated_Code/Cpu.c **** ** ===================================================================
 583:../Generated_Code/Cpu.c **** */
 584:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_RTC)
 585:../Generated_Code/Cpu.c **** {
 1000              		.loc 1 585 0
 1001              		.cfi_startproc
 1002 0000 80B5     		push	{r7, lr}
 1003              	.LCFI64:
 1004              		.cfi_def_cfa_offset 8
 1005              		.cfi_offset 7, -8
 1006              		.cfi_offset 14, -4
 1007 0002 00AF     		add	r7, sp, #0
 1008              	.LCFI65:
 1009              		.cfi_def_cfa_register 7
 586:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 587:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1010              		.loc 1 587 0
 1011              	@ 587 "../Generated_Code/Cpu.c" 1
 1012 0004 FFBE     		BKPT 255
 1013              	@ 0 "" 2
 588:../Generated_Code/Cpu.c **** }
 1014              		.loc 1 588 0
 1015              		.code	16
 1016 0006 BD46     		mov	sp, r7
 1017              		@ sp needed for prologue
 1018 0008 80BD     		pop	{r7, pc}
 1019              		.cfi_endproc
 1020              	.LFE32:
 1022 000a C046     		.section	.text.Cpu_ivINT_RTC_Seconds,"ax",%progbits
 1023              		.align	2
 1024              		.global	Cpu_ivINT_RTC_Seconds
 1025              		.code	16
 1026              		.thumb_func
 1028              	Cpu_ivINT_RTC_Seconds:
 1029              	.LFB33:
 589:../Generated_Code/Cpu.c **** 
 590:../Generated_Code/Cpu.c **** /*
 591:../Generated_Code/Cpu.c **** ** ===================================================================
 592:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_RTC_Seconds (component MKL25Z128LK4)
 593:../Generated_Code/Cpu.c **** **
 594:../Generated_Code/Cpu.c **** **     Description :
 595:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 596:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 597:../Generated_Code/Cpu.c **** ** ===================================================================
 598:../Generated_Code/Cpu.c **** */
 599:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_RTC_Seconds)
 600:../Generated_Code/Cpu.c **** {
 1030              		.loc 1 600 0
 1031              		.cfi_startproc
 1032 0000 80B5     		push	{r7, lr}
 1033              	.LCFI66:
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 00AF     		add	r7, sp, #0
 1038              	.LCFI67:
 1039              		.cfi_def_cfa_register 7
 601:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 602:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1040              		.loc 1 602 0
 1041              	@ 602 "../Generated_Code/Cpu.c" 1
 1042 0004 FFBE     		BKPT 255
 1043              	@ 0 "" 2
 603:../Generated_Code/Cpu.c **** }
 1044              		.loc 1 603 0
 1045              		.code	16
 1046 0006 BD46     		mov	sp, r7
 1047              		@ sp needed for prologue
 1048 0008 80BD     		pop	{r7, pc}
 1049              		.cfi_endproc
 1050              	.LFE33:
 1052 000a C046     		.section	.text.Cpu_ivINT_PIT,"ax",%progbits
 1053              		.align	2
 1054              		.global	Cpu_ivINT_PIT
 1055              		.code	16
 1056              		.thumb_func
 1058              	Cpu_ivINT_PIT:
 1059              	.LFB34:
 604:../Generated_Code/Cpu.c **** 
 605:../Generated_Code/Cpu.c **** /*
 606:../Generated_Code/Cpu.c **** ** ===================================================================
 607:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_PIT (component MKL25Z128LK4)
 608:../Generated_Code/Cpu.c **** **
 609:../Generated_Code/Cpu.c **** **     Description :
 610:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 611:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 612:../Generated_Code/Cpu.c **** ** ===================================================================
 613:../Generated_Code/Cpu.c **** */
 614:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_PIT)
 615:../Generated_Code/Cpu.c **** {
 1060              		.loc 1 615 0
 1061              		.cfi_startproc
 1062 0000 80B5     		push	{r7, lr}
 1063              	.LCFI68:
 1064              		.cfi_def_cfa_offset 8
 1065              		.cfi_offset 7, -8
 1066              		.cfi_offset 14, -4
 1067 0002 00AF     		add	r7, sp, #0
 1068              	.LCFI69:
 1069              		.cfi_def_cfa_register 7
 616:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 617:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1070              		.loc 1 617 0
 1071              	@ 617 "../Generated_Code/Cpu.c" 1
 1072 0004 FFBE     		BKPT 255
 1073              	@ 0 "" 2
 618:../Generated_Code/Cpu.c **** }
 1074              		.loc 1 618 0
 1075              		.code	16
 1076 0006 BD46     		mov	sp, r7
 1077              		@ sp needed for prologue
 1078 0008 80BD     		pop	{r7, pc}
 1079              		.cfi_endproc
 1080              	.LFE34:
 1082 000a C046     		.section	.text.Cpu_ivINT_Reserved39,"ax",%progbits
 1083              		.align	2
 1084              		.global	Cpu_ivINT_Reserved39
 1085              		.code	16
 1086              		.thumb_func
 1088              	Cpu_ivINT_Reserved39:
 1089              	.LFB35:
 619:../Generated_Code/Cpu.c **** 
 620:../Generated_Code/Cpu.c **** /*
 621:../Generated_Code/Cpu.c **** ** ===================================================================
 622:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved39 (component MKL25Z128LK4)
 623:../Generated_Code/Cpu.c **** **
 624:../Generated_Code/Cpu.c **** **     Description :
 625:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 626:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 627:../Generated_Code/Cpu.c **** ** ===================================================================
 628:../Generated_Code/Cpu.c **** */
 629:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved39)
 630:../Generated_Code/Cpu.c **** {
 1090              		.loc 1 630 0
 1091              		.cfi_startproc
 1092 0000 80B5     		push	{r7, lr}
 1093              	.LCFI70:
 1094              		.cfi_def_cfa_offset 8
 1095              		.cfi_offset 7, -8
 1096              		.cfi_offset 14, -4
 1097 0002 00AF     		add	r7, sp, #0
 1098              	.LCFI71:
 1099              		.cfi_def_cfa_register 7
 631:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 632:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1100              		.loc 1 632 0
 1101              	@ 632 "../Generated_Code/Cpu.c" 1
 1102 0004 FFBE     		BKPT 255
 1103              	@ 0 "" 2
 633:../Generated_Code/Cpu.c **** }
 1104              		.loc 1 633 0
 1105              		.code	16
 1106 0006 BD46     		mov	sp, r7
 1107              		@ sp needed for prologue
 1108 0008 80BD     		pop	{r7, pc}
 1109              		.cfi_endproc
 1110              	.LFE35:
 1112 000a C046     		.section	.text.Cpu_ivINT_USB0,"ax",%progbits
 1113              		.align	2
 1114              		.global	Cpu_ivINT_USB0
 1115              		.code	16
 1116              		.thumb_func
 1118              	Cpu_ivINT_USB0:
 1119              	.LFB36:
 634:../Generated_Code/Cpu.c **** 
 635:../Generated_Code/Cpu.c **** /*
 636:../Generated_Code/Cpu.c **** ** ===================================================================
 637:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_USB0 (component MKL25Z128LK4)
 638:../Generated_Code/Cpu.c **** **
 639:../Generated_Code/Cpu.c **** **     Description :
 640:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 641:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 642:../Generated_Code/Cpu.c **** ** ===================================================================
 643:../Generated_Code/Cpu.c **** */
 644:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_USB0)
 645:../Generated_Code/Cpu.c **** {
 1120              		.loc 1 645 0
 1121              		.cfi_startproc
 1122 0000 80B5     		push	{r7, lr}
 1123              	.LCFI72:
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 00AF     		add	r7, sp, #0
 1128              	.LCFI73:
 1129              		.cfi_def_cfa_register 7
 646:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 647:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1130              		.loc 1 647 0
 1131              	@ 647 "../Generated_Code/Cpu.c" 1
 1132 0004 FFBE     		BKPT 255
 1133              	@ 0 "" 2
 648:../Generated_Code/Cpu.c **** }
 1134              		.loc 1 648 0
 1135              		.code	16
 1136 0006 BD46     		mov	sp, r7
 1137              		@ sp needed for prologue
 1138 0008 80BD     		pop	{r7, pc}
 1139              		.cfi_endproc
 1140              	.LFE36:
 1142 000a C046     		.section	.text.Cpu_ivINT_DAC0,"ax",%progbits
 1143              		.align	2
 1144              		.global	Cpu_ivINT_DAC0
 1145              		.code	16
 1146              		.thumb_func
 1148              	Cpu_ivINT_DAC0:
 1149              	.LFB37:
 649:../Generated_Code/Cpu.c **** 
 650:../Generated_Code/Cpu.c **** /*
 651:../Generated_Code/Cpu.c **** ** ===================================================================
 652:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_DAC0 (component MKL25Z128LK4)
 653:../Generated_Code/Cpu.c **** **
 654:../Generated_Code/Cpu.c **** **     Description :
 655:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 656:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 657:../Generated_Code/Cpu.c **** ** ===================================================================
 658:../Generated_Code/Cpu.c **** */
 659:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_DAC0)
 660:../Generated_Code/Cpu.c **** {
 1150              		.loc 1 660 0
 1151              		.cfi_startproc
 1152 0000 80B5     		push	{r7, lr}
 1153              	.LCFI74:
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 00AF     		add	r7, sp, #0
 1158              	.LCFI75:
 1159              		.cfi_def_cfa_register 7
 661:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 662:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1160              		.loc 1 662 0
 1161              	@ 662 "../Generated_Code/Cpu.c" 1
 1162 0004 FFBE     		BKPT 255
 1163              	@ 0 "" 2
 663:../Generated_Code/Cpu.c **** }
 1164              		.loc 1 663 0
 1165              		.code	16
 1166 0006 BD46     		mov	sp, r7
 1167              		@ sp needed for prologue
 1168 0008 80BD     		pop	{r7, pc}
 1169              		.cfi_endproc
 1170              	.LFE37:
 1172 000a C046     		.section	.text.Cpu_ivINT_TSI0,"ax",%progbits
 1173              		.align	2
 1174              		.global	Cpu_ivINT_TSI0
 1175              		.code	16
 1176              		.thumb_func
 1178              	Cpu_ivINT_TSI0:
 1179              	.LFB38:
 664:../Generated_Code/Cpu.c **** 
 665:../Generated_Code/Cpu.c **** /*
 666:../Generated_Code/Cpu.c **** ** ===================================================================
 667:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_TSI0 (component MKL25Z128LK4)
 668:../Generated_Code/Cpu.c **** **
 669:../Generated_Code/Cpu.c **** **     Description :
 670:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 671:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 672:../Generated_Code/Cpu.c **** ** ===================================================================
 673:../Generated_Code/Cpu.c **** */
 674:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_TSI0)
 675:../Generated_Code/Cpu.c **** {
 1180              		.loc 1 675 0
 1181              		.cfi_startproc
 1182 0000 80B5     		push	{r7, lr}
 1183              	.LCFI76:
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 7, -8
 1186              		.cfi_offset 14, -4
 1187 0002 00AF     		add	r7, sp, #0
 1188              	.LCFI77:
 1189              		.cfi_def_cfa_register 7
 676:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 677:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1190              		.loc 1 677 0
 1191              	@ 677 "../Generated_Code/Cpu.c" 1
 1192 0004 FFBE     		BKPT 255
 1193              	@ 0 "" 2
 678:../Generated_Code/Cpu.c **** }
 1194              		.loc 1 678 0
 1195              		.code	16
 1196 0006 BD46     		mov	sp, r7
 1197              		@ sp needed for prologue
 1198 0008 80BD     		pop	{r7, pc}
 1199              		.cfi_endproc
 1200              	.LFE38:
 1202 000a C046     		.section	.text.Cpu_ivINT_MCG,"ax",%progbits
 1203              		.align	2
 1204              		.global	Cpu_ivINT_MCG
 1205              		.code	16
 1206              		.thumb_func
 1208              	Cpu_ivINT_MCG:
 1209              	.LFB39:
 679:../Generated_Code/Cpu.c **** 
 680:../Generated_Code/Cpu.c **** /*
 681:../Generated_Code/Cpu.c **** ** ===================================================================
 682:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_MCG (component MKL25Z128LK4)
 683:../Generated_Code/Cpu.c **** **
 684:../Generated_Code/Cpu.c **** **     Description :
 685:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 686:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 687:../Generated_Code/Cpu.c **** ** ===================================================================
 688:../Generated_Code/Cpu.c **** */
 689:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_MCG)
 690:../Generated_Code/Cpu.c **** {
 1210              		.loc 1 690 0
 1211              		.cfi_startproc
 1212 0000 80B5     		push	{r7, lr}
 1213              	.LCFI78:
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 7, -8
 1216              		.cfi_offset 14, -4
 1217 0002 00AF     		add	r7, sp, #0
 1218              	.LCFI79:
 1219              		.cfi_def_cfa_register 7
 691:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 692:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1220              		.loc 1 692 0
 1221              	@ 692 "../Generated_Code/Cpu.c" 1
 1222 0004 FFBE     		BKPT 255
 1223              	@ 0 "" 2
 693:../Generated_Code/Cpu.c **** }
 1224              		.loc 1 693 0
 1225              		.code	16
 1226 0006 BD46     		mov	sp, r7
 1227              		@ sp needed for prologue
 1228 0008 80BD     		pop	{r7, pc}
 1229              		.cfi_endproc
 1230              	.LFE39:
 1232 000a C046     		.section	.text.Cpu_ivINT_LPTimer,"ax",%progbits
 1233              		.align	2
 1234              		.global	Cpu_ivINT_LPTimer
 1235              		.code	16
 1236              		.thumb_func
 1238              	Cpu_ivINT_LPTimer:
 1239              	.LFB40:
 694:../Generated_Code/Cpu.c **** 
 695:../Generated_Code/Cpu.c **** /*
 696:../Generated_Code/Cpu.c **** ** ===================================================================
 697:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_LPTimer (component MKL25Z128LK4)
 698:../Generated_Code/Cpu.c **** **
 699:../Generated_Code/Cpu.c **** **     Description :
 700:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 701:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 702:../Generated_Code/Cpu.c **** ** ===================================================================
 703:../Generated_Code/Cpu.c **** */
 704:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_LPTimer)
 705:../Generated_Code/Cpu.c **** {
 1240              		.loc 1 705 0
 1241              		.cfi_startproc
 1242 0000 80B5     		push	{r7, lr}
 1243              	.LCFI80:
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 7, -8
 1246              		.cfi_offset 14, -4
 1247 0002 00AF     		add	r7, sp, #0
 1248              	.LCFI81:
 1249              		.cfi_def_cfa_register 7
 706:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 707:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1250              		.loc 1 707 0
 1251              	@ 707 "../Generated_Code/Cpu.c" 1
 1252 0004 FFBE     		BKPT 255
 1253              	@ 0 "" 2
 708:../Generated_Code/Cpu.c **** }
 1254              		.loc 1 708 0
 1255              		.code	16
 1256 0006 BD46     		mov	sp, r7
 1257              		@ sp needed for prologue
 1258 0008 80BD     		pop	{r7, pc}
 1259              		.cfi_endproc
 1260              	.LFE40:
 1262 000a C046     		.section	.text.Cpu_ivINT_Reserved45,"ax",%progbits
 1263              		.align	2
 1264              		.global	Cpu_ivINT_Reserved45
 1265              		.code	16
 1266              		.thumb_func
 1268              	Cpu_ivINT_Reserved45:
 1269              	.LFB41:
 709:../Generated_Code/Cpu.c **** 
 710:../Generated_Code/Cpu.c **** /*
 711:../Generated_Code/Cpu.c **** ** ===================================================================
 712:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_Reserved45 (component MKL25Z128LK4)
 713:../Generated_Code/Cpu.c **** **
 714:../Generated_Code/Cpu.c **** **     Description :
 715:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 716:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 717:../Generated_Code/Cpu.c **** ** ===================================================================
 718:../Generated_Code/Cpu.c **** */
 719:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_Reserved45)
 720:../Generated_Code/Cpu.c **** {
 1270              		.loc 1 720 0
 1271              		.cfi_startproc
 1272 0000 80B5     		push	{r7, lr}
 1273              	.LCFI82:
 1274              		.cfi_def_cfa_offset 8
 1275              		.cfi_offset 7, -8
 1276              		.cfi_offset 14, -4
 1277 0002 00AF     		add	r7, sp, #0
 1278              	.LCFI83:
 1279              		.cfi_def_cfa_register 7
 721:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 722:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1280              		.loc 1 722 0
 1281              	@ 722 "../Generated_Code/Cpu.c" 1
 1282 0004 FFBE     		BKPT 255
 1283              	@ 0 "" 2
 723:../Generated_Code/Cpu.c **** }
 1284              		.loc 1 723 0
 1285              		.code	16
 1286 0006 BD46     		mov	sp, r7
 1287              		@ sp needed for prologue
 1288 0008 80BD     		pop	{r7, pc}
 1289              		.cfi_endproc
 1290              	.LFE41:
 1292 000a C046     		.section	.text.Cpu_ivINT_PORTD,"ax",%progbits
 1293              		.align	2
 1294              		.global	Cpu_ivINT_PORTD
 1295              		.code	16
 1296              		.thumb_func
 1298              	Cpu_ivINT_PORTD:
 1299              	.LFB42:
 724:../Generated_Code/Cpu.c **** 
 725:../Generated_Code/Cpu.c **** /*
 726:../Generated_Code/Cpu.c **** ** ===================================================================
 727:../Generated_Code/Cpu.c **** **     Method      :  Cpu_Cpu_ivINT_PORTD (component MKL25Z128LK4)
 728:../Generated_Code/Cpu.c **** **
 729:../Generated_Code/Cpu.c **** **     Description :
 730:../Generated_Code/Cpu.c **** **         This ISR services an unused interrupt/exception vector.
 731:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 732:../Generated_Code/Cpu.c **** ** ===================================================================
 733:../Generated_Code/Cpu.c **** */
 734:../Generated_Code/Cpu.c **** PE_ISR(Cpu_ivINT_PORTD)
 735:../Generated_Code/Cpu.c **** {
 1300              		.loc 1 735 0
 1301              		.cfi_startproc
 1302 0000 80B5     		push	{r7, lr}
 1303              	.LCFI84:
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 7, -8
 1306              		.cfi_offset 14, -4
 1307 0002 00AF     		add	r7, sp, #0
 1308              	.LCFI85:
 1309              		.cfi_def_cfa_register 7
 736:../Generated_Code/Cpu.c ****   /* This code can be changed using the CPU component property "Build Options / Unhandled int code"
 737:../Generated_Code/Cpu.c ****   PE_DEBUGHALT();
 1310              		.loc 1 737 0
 1311              	@ 737 "../Generated_Code/Cpu.c" 1
 1312 0004 FFBE     		BKPT 255
 1313              	@ 0 "" 2
 738:../Generated_Code/Cpu.c **** }
 1314              		.loc 1 738 0
 1315              		.code	16
 1316 0006 BD46     		mov	sp, r7
 1317              		@ sp needed for prologue
 1318 0008 80BD     		pop	{r7, pc}
 1319              		.cfi_endproc
 1320              	.LFE42:
 1322 000a C046     		.section	.text.__init_hardware,"ax",%progbits
 1323              		.align	2
 1324              		.global	__init_hardware
 1325              		.code	16
 1326              		.thumb_func
 1328              	__init_hardware:
 1329              	.LFB43:
 739:../Generated_Code/Cpu.c **** 
 740:../Generated_Code/Cpu.c **** 
 741:../Generated_Code/Cpu.c **** /*** !!! Here you can place your own code using property "User data declarations" on the build opti
 742:../Generated_Code/Cpu.c **** 
 743:../Generated_Code/Cpu.c **** /*lint -esym(765,__init_hardware) Disable MISRA rule (8.10) checking for symbols (__init_hardware).
 744:../Generated_Code/Cpu.c **** /*lint -esym(765,Cpu_Interrupt) Disable MISRA rule (8.10) checking for symbols (Cpu_Interrupt). */
 745:../Generated_Code/Cpu.c **** void __init_hardware(void)
 746:../Generated_Code/Cpu.c **** {
 1330              		.loc 1 746 0
 1331              		.cfi_startproc
 1332 0000 80B5     		push	{r7, lr}
 1333              	.LCFI86:
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 7, -8
 1336              		.cfi_offset 14, -4
 1337 0002 00AF     		add	r7, sp, #0
 1338              	.LCFI87:
 1339              		.cfi_def_cfa_register 7
 747:../Generated_Code/Cpu.c **** 
 748:../Generated_Code/Cpu.c ****   /*** !!! Here you can place your own code before PE initialization using property "User code befo
 749:../Generated_Code/Cpu.c **** 
 750:../Generated_Code/Cpu.c ****   /*** ### MKL25Z128VLK4 "Cpu" init code ... ***/
 751:../Generated_Code/Cpu.c ****   /*** PE initialization code after reset ***/
 752:../Generated_Code/Cpu.c ****   SCB_VTOR = (uint32_t)(&__vect_table); /* Set the interrupt vector table position */
 1340              		.loc 1 752 0
 1341 0004 364A     		ldr	r2, .L48
 1342 0006 3749     		ldr	r1, .L48+4
 1343 0008 374B     		ldr	r3, .L48+8
 1344 000a D150     		str	r1, [r2, r3]
 753:../Generated_Code/Cpu.c ****   /* Disable the WDOG module */
 754:../Generated_Code/Cpu.c ****   /* SIM_COPC: ??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0
 755:../Generated_Code/Cpu.c ****   SIM_COPC = SIM_COPC_COPT(0x00);
 1345              		.loc 1 755 0
 1346 000c 374A     		ldr	r2, .L48+12
 1347 000e 8823     		mov	r3, #136
 1348 0010 5B01     		lsl	r3, r3, #5
 1349 0012 0021     		mov	r1, #0
 1350 0014 D150     		str	r1, [r2, r3]
 756:../Generated_Code/Cpu.c **** 
 757:../Generated_Code/Cpu.c ****   /* System clock initialization */
 758:../Generated_Code/Cpu.c ****   /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=3,??=0,??=0,??=0,?
 759:../Generated_Code/Cpu.c ****   SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x03)); /* Set the system prescale
 1351              		.loc 1 759 0
 1352 0016 354A     		ldr	r2, .L48+12
 1353 0018 354B     		ldr	r3, .L48+16
 1354 001a C021     		mov	r1, #192
 1355 001c 8902     		lsl	r1, r1, #10
 1356 001e D150     		str	r1, [r2, r3]
 760:../Generated_Code/Cpu.c ****   /* SIM_SCGC5: PORTD=1,PORTB=1,PORTA=1 */
 761:../Generated_Code/Cpu.c ****   SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK |
 1357              		.loc 1 761 0
 1358 0020 324A     		ldr	r2, .L48+12
 1359 0022 3249     		ldr	r1, .L48+12
 1360 0024 334B     		ldr	r3, .L48+20
 1361 0026 CB58     		ldr	r3, [r1, r3]
 1362 0028 B021     		mov	r1, #176
 1363 002a 4901     		lsl	r1, r1, #5
 1364 002c 1943     		orr	r1, r3
 1365 002e 314B     		ldr	r3, .L48+20
 1366 0030 D150     		str	r1, [r2, r3]
 762:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTB_MASK |
 763:../Generated_Code/Cpu.c ****                SIM_SCGC5_PORTA_MASK;   /* Enable clock gate for ports to enable pin routing */
 764:../Generated_Code/Cpu.c ****   if ((PMC_REGSC & PMC_REGSC_ACKISO_MASK) != 0x0U) {
 1367              		.loc 1 764 0
 1368 0032 314B     		ldr	r3, .L48+24
 1369 0034 9B78     		ldrb	r3, [r3, #2]
 1370 0036 DBB2     		uxtb	r3, r3
 1371 0038 1A1C     		mov	r2, r3
 1372 003a 0823     		mov	r3, #8
 1373 003c 1340     		and	r3, r2
 1374 003e 07D0     		beq	.L45
 765:../Generated_Code/Cpu.c ****     /* PMC_REGSC: ACKISO=1 */
 766:../Generated_Code/Cpu.c ****     PMC_REGSC |= PMC_REGSC_ACKISO_MASK; /* Release IO pads after wakeup from VLLS mode. */
 1375              		.loc 1 766 0
 1376 0040 2D4B     		ldr	r3, .L48+24
 1377 0042 2D4A     		ldr	r2, .L48+24
 1378 0044 9278     		ldrb	r2, [r2, #2]
 1379 0046 D2B2     		uxtb	r2, r2
 1380 0048 0821     		mov	r1, #8
 1381 004a 0A43     		orr	r2, r1
 1382 004c D2B2     		uxtb	r2, r2
 1383 004e 9A70     		strb	r2, [r3, #2]
 1384              	.L45:
 767:../Generated_Code/Cpu.c ****   }
 768:../Generated_Code/Cpu.c ****   /* SIM_CLKDIV1: OUTDIV1=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,??=0,OUTDIV4=0,??=0,??=0,??=0,?
 769:../Generated_Code/Cpu.c ****   SIM_CLKDIV1 = (SIM_CLKDIV1_OUTDIV1(0x00) | SIM_CLKDIV1_OUTDIV4(0x00)); /* Update system prescaler
 1385              		.loc 1 769 0
 1386 0050 264A     		ldr	r2, .L48+12
 1387 0052 274B     		ldr	r3, .L48+16
 1388 0054 0021     		mov	r1, #0
 1389 0056 D150     		str	r1, [r2, r3]
 770:../Generated_Code/Cpu.c ****   /* SIM_SOPT2: PLLFLLSEL=0 */
 771:../Generated_Code/Cpu.c ****   SIM_SOPT2 &= (uint32_t)~(uint32_t)(SIM_SOPT2_PLLFLLSEL_MASK); /* Select FLL as a clock source for
 1390              		.loc 1 771 0
 1391 0058 244A     		ldr	r2, .L48+12
 1392 005a 2449     		ldr	r1, .L48+12
 1393 005c 274B     		ldr	r3, .L48+28
 1394 005e C958     		ldr	r1, [r1, r3]
 1395 0060 274B     		ldr	r3, .L48+32
 1396 0062 1940     		and	r1, r3
 1397 0064 254B     		ldr	r3, .L48+28
 1398 0066 D150     		str	r1, [r2, r3]
 772:../Generated_Code/Cpu.c ****   /* SIM_SOPT1: OSC32KSEL=3 */
 773:../Generated_Code/Cpu.c ****   SIM_SOPT1 |= SIM_SOPT1_OSC32KSEL(0x03); /* LPO 1kHz oscillator drives 32 kHz clock for various pe
 1399              		.loc 1 773 0
 1400 0068 204B     		ldr	r3, .L48+12
 1401 006a 204A     		ldr	r2, .L48+12
 1402 006c 1268     		ldr	r2, [r2]
 1403 006e C021     		mov	r1, #192
 1404 0070 0903     		lsl	r1, r1, #12
 1405 0072 0A43     		orr	r2, r1
 1406 0074 1A60     		str	r2, [r3]
 774:../Generated_Code/Cpu.c ****   /* SIM_SOPT2: TPMSRC=1 */
 775:../Generated_Code/Cpu.c ****   SIM_SOPT2 = (uint32_t)((SIM_SOPT2 & (uint32_t)~(uint32_t)(
 1407              		.loc 1 775 0
 1408 0076 1D4A     		ldr	r2, .L48+12
 1409 0078 1C49     		ldr	r1, .L48+12
 1410 007a 204B     		ldr	r3, .L48+28
 1411 007c C958     		ldr	r1, [r1, r3]
 1412 007e 214B     		ldr	r3, .L48+36
 1413 0080 0B40     		and	r3, r1
 1414 0082 8021     		mov	r1, #128
 1415 0084 4904     		lsl	r1, r1, #17
 1416 0086 1943     		orr	r1, r3
 1417 0088 1C4B     		ldr	r3, .L48+28
 1418 008a D150     		str	r1, [r2, r3]
 776:../Generated_Code/Cpu.c ****                SIM_SOPT2_TPMSRC(0x02)
 777:../Generated_Code/Cpu.c ****               )) | (uint32_t)(
 778:../Generated_Code/Cpu.c ****                SIM_SOPT2_TPMSRC(0x01)
 779:../Generated_Code/Cpu.c ****               ));                      /* Set the TPM clock */
 780:../Generated_Code/Cpu.c ****   /* Switch to FEI Mode */
 781:../Generated_Code/Cpu.c ****   /* MCG_C1: CLKS=0,FRDIV=0,IREFS=1,IRCLKEN=1,IREFSTEN=0 */
 782:../Generated_Code/Cpu.c ****   MCG_C1 = MCG_C1_CLKS(0x00) |
 1419              		.loc 1 782 0
 1420 008c 1E4B     		ldr	r3, .L48+40
 1421 008e 0622     		mov	r2, #6
 1422 0090 1A70     		strb	r2, [r3]
 783:../Generated_Code/Cpu.c ****            MCG_C1_FRDIV(0x00) |
 784:../Generated_Code/Cpu.c ****            MCG_C1_IREFS_MASK |
 785:../Generated_Code/Cpu.c ****            MCG_C1_IRCLKEN_MASK;
 786:../Generated_Code/Cpu.c ****   /* MCG_C2: LOCRE0=0,??=0,RANGE0=0,HGO0=0,EREFS0=0,LP=0,IRCS=0 */
 787:../Generated_Code/Cpu.c ****   MCG_C2 = MCG_C2_RANGE0(0x00);
 1423              		.loc 1 787 0
 1424 0092 1D4B     		ldr	r3, .L48+40
 1425 0094 0022     		mov	r2, #0
 1426 0096 5A70     		strb	r2, [r3, #1]
 788:../Generated_Code/Cpu.c ****   /* MCG_C4: DMX32=0,DRST_DRS=0 */
 789:../Generated_Code/Cpu.c ****   MCG_C4 &= (uint8_t)~(uint8_t)((MCG_C4_DMX32_MASK | MCG_C4_DRST_DRS(0x03)));
 1427              		.loc 1 789 0
 1428 0098 1B4B     		ldr	r3, .L48+40
 1429 009a 1B4A     		ldr	r2, .L48+40
 1430 009c D278     		ldrb	r2, [r2, #3]
 1431 009e D1B2     		uxtb	r1, r2
 1432 00a0 1F22     		mov	r2, #31
 1433 00a2 0A40     		and	r2, r1
 1434 00a4 D2B2     		uxtb	r2, r2
 1435 00a6 DA70     		strb	r2, [r3, #3]
 790:../Generated_Code/Cpu.c ****   /* OSC0_CR: ERCLKEN=1,??=0,EREFSTEN=0,??=0,SC2P=0,SC4P=0,SC8P=0,SC16P=0 */
 791:../Generated_Code/Cpu.c ****   OSC0_CR = OSC_CR_ERCLKEN_MASK;
 1436              		.loc 1 791 0
 1437 00a8 184B     		ldr	r3, .L48+44
 1438 00aa 8022     		mov	r2, #128
 1439 00ac 1A70     		strb	r2, [r3]
 792:../Generated_Code/Cpu.c ****   /* MCG_C5: ??=0,PLLCLKEN0=0,PLLSTEN0=0,PRDIV0=0 */
 793:../Generated_Code/Cpu.c ****   MCG_C5 = MCG_C5_PRDIV0(0x00);
 1440              		.loc 1 793 0
 1441 00ae 164B     		ldr	r3, .L48+40
 1442 00b0 0022     		mov	r2, #0
 1443 00b2 1A71     		strb	r2, [r3, #4]
 794:../Generated_Code/Cpu.c ****   /* MCG_C6: LOLIE0=0,PLLS=0,CME0=0,VDIV0=0 */
 795:../Generated_Code/Cpu.c ****   MCG_C6 = MCG_C6_VDIV0(0x00);
 1444              		.loc 1 795 0
 1445 00b4 144B     		ldr	r3, .L48+40
 1446 00b6 0022     		mov	r2, #0
 1447 00b8 5A71     		strb	r2, [r3, #5]
 796:../Generated_Code/Cpu.c ****   while((MCG_S & MCG_S_IREFST_MASK) == 0x00U) { /* Check that the source of the FLL reference clock
 1448              		.loc 1 796 0
 1449 00ba C046     		mov	r8, r8
 1450              	.L46:
 1451              		.loc 1 796 0 is_stmt 0
 1452 00bc 124B     		ldr	r3, .L48+40
 1453 00be 9B79     		ldrb	r3, [r3, #6]
 1454 00c0 DBB2     		uxtb	r3, r3
 1455 00c2 1A1C     		mov	r2, r3
 1456 00c4 1023     		mov	r3, #16
 1457 00c6 1340     		and	r3, r2
 1458 00c8 F8D0     		beq	.L46
 797:../Generated_Code/Cpu.c ****   }
 798:../Generated_Code/Cpu.c ****   while((MCG_S & 0x0CU) != 0x00U) {    /* Wait until output of the FLL is selected */
 1459              		.loc 1 798 0 is_stmt 1
 1460 00ca C046     		mov	r8, r8
 1461              	.L47:
 1462              		.loc 1 798 0 is_stmt 0
 1463 00cc 0E4B     		ldr	r3, .L48+40
 1464 00ce 9B79     		ldrb	r3, [r3, #6]
 1465 00d0 DBB2     		uxtb	r3, r3
 1466 00d2 1A1C     		mov	r2, r3
 1467 00d4 0C23     		mov	r3, #12
 1468 00d6 1340     		and	r3, r2
 1469 00d8 F8D1     		bne	.L47
 799:../Generated_Code/Cpu.c ****   }
 800:../Generated_Code/Cpu.c ****   /*** End of PE initialization code after reset ***/
 801:../Generated_Code/Cpu.c **** 
 802:../Generated_Code/Cpu.c ****   /*** !!! Here you can place your own code after PE initialization using property "User code after
 803:../Generated_Code/Cpu.c **** 
 804:../Generated_Code/Cpu.c **** }
 1470              		.loc 1 804 0 is_stmt 1
 1471 00da BD46     		mov	sp, r7
 1472              		@ sp needed for prologue
 1473 00dc 80BD     		pop	{r7, pc}
 1474              	.L49:
 1475 00de C046     		.align	2
 1476              	.L48:
 1477 00e0 00E000E0 		.word	-536813568
 1478 00e4 00000000 		.word	__vect_table
 1479 00e8 080D0000 		.word	3336
 1480 00ec 00700440 		.word	1074032640
 1481 00f0 44100000 		.word	4164
 1482 00f4 38100000 		.word	4152
 1483 00f8 00D00740 		.word	1074253824
 1484 00fc 04100000 		.word	4100
 1485 0100 FFFFFEFF 		.word	-65537
 1486 0104 FFFFFFFC 		.word	-50331649
 1487 0108 00400640 		.word	1074151424
 1488 010c 00500640 		.word	1074155520
 1489              		.cfi_endproc
 1490              	.LFE43:
 1492              		.section	.text.PE_low_level_init,"ax",%progbits
 1493              		.align	2
 1494              		.global	PE_low_level_init
 1495              		.code	16
 1496              		.thumb_func
 1498              	PE_low_level_init:
 1499              	.LFB44:
 805:../Generated_Code/Cpu.c **** 
 806:../Generated_Code/Cpu.c **** 
 807:../Generated_Code/Cpu.c **** 
 808:../Generated_Code/Cpu.c **** /*
 809:../Generated_Code/Cpu.c **** ** ===================================================================
 810:../Generated_Code/Cpu.c **** **     Method      :  PE_low_level_init (component MKL25Z128LK4)
 811:../Generated_Code/Cpu.c **** **
 812:../Generated_Code/Cpu.c **** **     Description :
 813:../Generated_Code/Cpu.c **** **         Initializes beans and provides common register initialization. 
 814:../Generated_Code/Cpu.c **** **         The method is called automatically as a part of the 
 815:../Generated_Code/Cpu.c **** **         application initialization code.
 816:../Generated_Code/Cpu.c **** **         This method is internal. It is used by Processor Expert only.
 817:../Generated_Code/Cpu.c **** ** ===================================================================
 818:../Generated_Code/Cpu.c **** */
 819:../Generated_Code/Cpu.c **** void PE_low_level_init(void)
 820:../Generated_Code/Cpu.c **** {
 1500              		.loc 1 820 0
 1501              		.cfi_startproc
 1502 0000 80B5     		push	{r7, lr}
 1503              	.LCFI88:
 1504              		.cfi_def_cfa_offset 8
 1505              		.cfi_offset 7, -8
 1506              		.cfi_offset 14, -4
 1507 0002 00AF     		add	r7, sp, #0
 1508              	.LCFI89:
 1509              		.cfi_def_cfa_register 7
 821:../Generated_Code/Cpu.c ****   #ifdef PEX_RTOS_INIT
 822:../Generated_Code/Cpu.c ****     PEX_RTOS_INIT();                   /* Initialization of the selected RTOS. Macro is defined by 
 823:../Generated_Code/Cpu.c ****   #endif
 824:../Generated_Code/Cpu.c ****       /* Initialization of the SIM module */
 825:../Generated_Code/Cpu.c ****         /* Initialization of the RCM module */
 826:../Generated_Code/Cpu.c ****   /* RCM_RPFW: RSTFLTSEL=0 */
 827:../Generated_Code/Cpu.c ****   RCM_RPFW &= (uint8_t)~(uint8_t)(RCM_RPFW_RSTFLTSEL(0x1F));
 1510              		.loc 1 827 0
 1511 0004 394B     		ldr	r3, .L51
 1512 0006 394A     		ldr	r2, .L51
 1513 0008 5279     		ldrb	r2, [r2, #5]
 1514 000a D2B2     		uxtb	r2, r2
 1515 000c 1F21     		mov	r1, #31
 1516 000e 8A43     		bic	r2, r1
 1517 0010 D2B2     		uxtb	r2, r2
 1518 0012 5A71     		strb	r2, [r3, #5]
 828:../Generated_Code/Cpu.c ****   /* RCM_RPFC: RSTFLTSS=0,RSTFLTSRW=0 */
 829:../Generated_Code/Cpu.c ****   RCM_RPFC &= (uint8_t)~(uint8_t)(
 1519              		.loc 1 829 0
 1520 0014 354B     		ldr	r3, .L51
 1521 0016 354A     		ldr	r2, .L51
 1522 0018 1279     		ldrb	r2, [r2, #4]
 1523 001a D2B2     		uxtb	r2, r2
 1524 001c 0721     		mov	r1, #7
 1525 001e 8A43     		bic	r2, r1
 1526 0020 D2B2     		uxtb	r2, r2
 1527 0022 1A71     		strb	r2, [r3, #4]
 830:../Generated_Code/Cpu.c ****                RCM_RPFC_RSTFLTSS_MASK |
 831:../Generated_Code/Cpu.c ****                RCM_RPFC_RSTFLTSRW(0x03)
 832:../Generated_Code/Cpu.c ****               );
 833:../Generated_Code/Cpu.c ****         /* Initialization of the FTFL_FlashConfig module */
 834:../Generated_Code/Cpu.c ****       /* Initialization of the PMC module */
 835:../Generated_Code/Cpu.c ****   /* PMC_LVDSC1: LVDACK=1,LVDIE=0,LVDRE=1,LVDV=0 */
 836:../Generated_Code/Cpu.c ****   PMC_LVDSC1 = (uint8_t)((PMC_LVDSC1 & (uint8_t)~(uint8_t)(
 1528              		.loc 1 836 0
 1529 0024 324B     		ldr	r3, .L51+4
 1530 0026 324A     		ldr	r2, .L51+4
 1531 0028 1278     		ldrb	r2, [r2]
 1532 002a D2B2     		uxtb	r2, r2
 1533 002c D2B2     		uxtb	r2, r2
 1534 002e 7321     		mov	r1, #115
 1535 0030 8A43     		bic	r2, r1
 1536 0032 D2B2     		uxtb	r2, r2
 1537 0034 5021     		mov	r1, #80
 1538 0036 0A43     		orr	r2, r1
 1539 0038 D2B2     		uxtb	r2, r2
 1540 003a D2B2     		uxtb	r2, r2
 1541 003c 1A70     		strb	r2, [r3]
 837:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDIE_MASK |
 838:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDV(0x03)
 839:../Generated_Code/Cpu.c ****                )) | (uint8_t)(
 840:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDACK_MASK |
 841:../Generated_Code/Cpu.c ****                 PMC_LVDSC1_LVDRE_MASK
 842:../Generated_Code/Cpu.c ****                ));
 843:../Generated_Code/Cpu.c ****   /* PMC_LVDSC2: LVWACK=1,LVWIE=0,LVWV=0 */
 844:../Generated_Code/Cpu.c ****   PMC_LVDSC2 = (uint8_t)((PMC_LVDSC2 & (uint8_t)~(uint8_t)(
 1542              		.loc 1 844 0
 1543 003e 2C4B     		ldr	r3, .L51+4
 1544 0040 2B4A     		ldr	r2, .L51+4
 1545 0042 5278     		ldrb	r2, [r2, #1]
 1546 0044 D2B2     		uxtb	r2, r2
 1547 0046 D2B2     		uxtb	r2, r2
 1548 0048 6321     		mov	r1, #99
 1549 004a 8A43     		bic	r2, r1
 1550 004c D2B2     		uxtb	r2, r2
 1551 004e 4021     		mov	r1, #64
 1552 0050 0A43     		orr	r2, r1
 1553 0052 D2B2     		uxtb	r2, r2
 1554 0054 D2B2     		uxtb	r2, r2
 1555 0056 5A70     		strb	r2, [r3, #1]
 845:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWIE_MASK |
 846:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWV(0x03)
 847:../Generated_Code/Cpu.c ****                )) | (uint8_t)(
 848:../Generated_Code/Cpu.c ****                 PMC_LVDSC2_LVWACK_MASK
 849:../Generated_Code/Cpu.c ****                ));
 850:../Generated_Code/Cpu.c ****   /* PMC_REGSC: BGEN=0,ACKISO=0,BGBE=0 */
 851:../Generated_Code/Cpu.c ****   PMC_REGSC &= (uint8_t)~(uint8_t)(
 1556              		.loc 1 851 0
 1557 0058 254B     		ldr	r3, .L51+4
 1558 005a 254A     		ldr	r2, .L51+4
 1559 005c 9278     		ldrb	r2, [r2, #2]
 1560 005e D2B2     		uxtb	r2, r2
 1561 0060 1921     		mov	r1, #25
 1562 0062 8A43     		bic	r2, r1
 1563 0064 D2B2     		uxtb	r2, r2
 1564 0066 9A70     		strb	r2, [r3, #2]
 852:../Generated_Code/Cpu.c ****                 PMC_REGSC_BGEN_MASK |
 853:../Generated_Code/Cpu.c ****                 PMC_REGSC_ACKISO_MASK |
 854:../Generated_Code/Cpu.c ****                 PMC_REGSC_BGBE_MASK
 855:../Generated_Code/Cpu.c ****                );
 856:../Generated_Code/Cpu.c ****   /* SMC_PMPROT: ??=0,??=0,AVLP=0,??=0,ALLS=0,??=0,AVLLS=0,??=0 */
 857:../Generated_Code/Cpu.c ****   SMC_PMPROT = 0x00U;                  /* Setup Power mode protection register */
 1565              		.loc 1 857 0
 1566 0068 224B     		ldr	r3, .L51+8
 1567 006a 0022     		mov	r2, #0
 1568 006c 1A70     		strb	r2, [r3]
 858:../Generated_Code/Cpu.c ****   /* Common initialization of the CPU registers */
 859:../Generated_Code/Cpu.c ****   /* GPIOA_PDDR: PDD&=~0x4000 */
 860:../Generated_Code/Cpu.c ****   GPIOA_PDDR &= (uint32_t)~(uint32_t)(GPIO_PDDR_PDD(0x4000));
 1569              		.loc 1 860 0
 1570 006e 224B     		ldr	r3, .L51+12
 1571 0070 214A     		ldr	r2, .L51+12
 1572 0072 5169     		ldr	r1, [r2, #20]
 1573 0074 214A     		ldr	r2, .L51+16
 1574 0076 0A40     		and	r2, r1
 1575 0078 5A61     		str	r2, [r3, #20]
 861:../Generated_Code/Cpu.c ****   /* SCB_SHPR3: PRI_15=0xC0 */
 862:../Generated_Code/Cpu.c ****   SCB_SHPR3 = (uint32_t)((SCB_SHPR3 & (uint32_t)~(uint32_t)(
 1576              		.loc 1 862 0
 1577 007a 214A     		ldr	r2, .L51+20
 1578 007c 2049     		ldr	r1, .L51+20
 1579 007e D223     		mov	r3, #210
 1580 0080 1B01     		lsl	r3, r3, #4
 1581 0082 CB58     		ldr	r3, [r1, r3]
 1582 0084 1B02     		lsl	r3, r3, #8
 1583 0086 1B0A     		lsr	r3, r3, #8
 1584 0088 C021     		mov	r1, #192
 1585 008a 0906     		lsl	r1, r1, #24
 1586 008c 1943     		orr	r1, r3
 1587 008e D223     		mov	r3, #210
 1588 0090 1B01     		lsl	r3, r3, #4
 1589 0092 D150     		str	r1, [r2, r3]
 863:../Generated_Code/Cpu.c ****                SCB_SHPR3_PRI_15(0x3F)
 864:../Generated_Code/Cpu.c ****               )) | (uint32_t)(
 865:../Generated_Code/Cpu.c ****                SCB_SHPR3_PRI_15(0xC0)
 866:../Generated_Code/Cpu.c ****               ));
 867:../Generated_Code/Cpu.c ****   /* PORTA_PCR20: ISF=0,MUX=7 */
 868:../Generated_Code/Cpu.c ****   PORTA_PCR20 = (uint32_t)((PORTA_PCR20 & (uint32_t)~(uint32_t)(
 1590              		.loc 1 868 0
 1591 0094 1B4B     		ldr	r3, .L51+24
 1592 0096 1B4A     		ldr	r2, .L51+24
 1593 0098 116D     		ldr	r1, [r2, #80]
 1594 009a 1B4A     		ldr	r2, .L51+28
 1595 009c 0A40     		and	r2, r1
 1596 009e E021     		mov	r1, #224
 1597 00a0 C900     		lsl	r1, r1, #3
 1598 00a2 0A43     		orr	r2, r1
 1599 00a4 1A65     		str	r2, [r3, #80]
 869:../Generated_Code/Cpu.c ****                  PORT_PCR_ISF_MASK
 870:../Generated_Code/Cpu.c ****                 )) | (uint32_t)(
 871:../Generated_Code/Cpu.c ****                  PORT_PCR_MUX(0x07)
 872:../Generated_Code/Cpu.c ****                 ));
 873:../Generated_Code/Cpu.c ****   /* NVIC_IPR1: PRI_6=0 */
 874:../Generated_Code/Cpu.c ****   NVIC_IPR1 &= (uint32_t)~(uint32_t)(NVIC_IP_PRI_6(0xFF));
 1600              		.loc 1 874 0
 1601 00a6 194A     		ldr	r2, .L51+32
 1602 00a8 1849     		ldr	r1, .L51+32
 1603 00aa C123     		mov	r3, #193
 1604 00ac 9B00     		lsl	r3, r3, #2
 1605 00ae C958     		ldr	r1, [r1, r3]
 1606 00b0 174B     		ldr	r3, .L51+36
 1607 00b2 1940     		and	r1, r3
 1608 00b4 C123     		mov	r3, #193
 1609 00b6 9B00     		lsl	r3, r3, #2
 1610 00b8 D150     		str	r1, [r2, r3]
 875:../Generated_Code/Cpu.c ****   /* ### McuLibConfig "MCUC1" init code ... */
 876:../Generated_Code/Cpu.c ****   WAIT1_Init();
 1611              		.loc 1 876 0
 1612 00ba FFF7FEFF 		bl	WAIT1_Init
 877:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd1" component auto initialization. Auto initialization feature can be di
 878:../Generated_Code/Cpu.c ****   (void)BitIoLdd1_Init(NULL);
 1613              		.loc 1 878 0
 1614 00be 0020     		mov	r0, #0
 1615 00c0 FFF7FEFF 		bl	BitIoLdd1_Init
 879:../Generated_Code/Cpu.c ****   /* ### LED "LEDG" init code ... */
 880:../Generated_Code/Cpu.c ****   LEDG_Init(); /* initialize LED driver */
 1616              		.loc 1 880 0
 1617 00c4 FFF7FEFF 		bl	LEDG_Init
 881:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd2" component auto initialization. Auto initialization feature can be di
 882:../Generated_Code/Cpu.c ****   (void)BitIoLdd2_Init(NULL);
 1618              		.loc 1 882 0
 1619 00c8 0020     		mov	r0, #0
 1620 00ca FFF7FEFF 		bl	BitIoLdd2_Init
 883:../Generated_Code/Cpu.c ****   /* ### LED "LEDB" init code ... */
 884:../Generated_Code/Cpu.c ****   LEDB_Init(); /* initialize LED driver */
 1621              		.loc 1 884 0
 1622 00ce FFF7FEFF 		bl	LEDB_Init
 885:../Generated_Code/Cpu.c ****   /* ### ExtInt_LDD "ExtIntLdd1" component auto initialization. Auto initialization feature can be 
 886:../Generated_Code/Cpu.c ****   (void)ExtIntLdd1_Init(NULL);
 1623              		.loc 1 886 0
 1624 00d2 0020     		mov	r0, #0
 1625 00d4 FFF7FEFF 		bl	ExtIntLdd1_Init
 887:../Generated_Code/Cpu.c ****   /* ### Init_SysTick "ST1" init code ... */
 888:../Generated_Code/Cpu.c ****   ST1_Init();
 1626              		.loc 1 888 0
 1627 00d8 FFF7FEFF 		bl	ST1_Init
 889:../Generated_Code/Cpu.c ****   /* ### BitIO_LDD "BitIoLdd3" component auto initialization. Auto initialization feature can be di
 890:../Generated_Code/Cpu.c ****   (void)BitIoLdd3_Init(NULL);
 1628              		.loc 1 890 0
 1629 00dc 0020     		mov	r0, #0
 1630 00de FFF7FEFF 		bl	BitIoLdd3_Init
 891:../Generated_Code/Cpu.c ****   /* ### LED "LEDR" init code ... */
 892:../Generated_Code/Cpu.c ****   LEDR_Init(); /* initialize LED driver */
 1631              		.loc 1 892 0
 1632 00e2 FFF7FEFF 		bl	LEDR_Init
 893:../Generated_Code/Cpu.c ****   __EI();
 1633              		.loc 1 893 0
 1634              	@ 893 "../Generated_Code/Cpu.c" 1
 1635 00e6 62B6     		CPSIE i
 1636              	@ 0 "" 2
 894:../Generated_Code/Cpu.c **** }
 1637              		.loc 1 894 0
 1638              		.code	16
 1639 00e8 BD46     		mov	sp, r7
 1640              		@ sp needed for prologue
 1641 00ea 80BD     		pop	{r7, pc}
 1642              	.L52:
 1643              		.align	2
 1644              	.L51:
 1645 00ec 00F00740 		.word	1074262016
 1646 00f0 00D00740 		.word	1074253824
 1647 00f4 00E00740 		.word	1074257920
 1648 00f8 00F00F40 		.word	1074786304
 1649 00fc FFBFFFFF 		.word	-16385
 1650 0100 00E000E0 		.word	-536813568
 1651 0104 00900440 		.word	1074040832
 1652 0108 FFF8FFFE 		.word	-16779009
 1653 010c 00E100E0 		.word	-536813312
 1654 0110 FFFF00FF 		.word	-16711681
 1655              		.cfi_endproc
 1656              	.LFE44:
 1658              		.global	_cfm
 1659              		.section	.cfmconfig,"a",%progbits
 1660              		.align	2
 1663              	_cfm:
 1664 0000 FF       		.byte	-1
 1665 0001 FF       		.byte	-1
 1666 0002 FF       		.byte	-1
 1667 0003 FF       		.byte	-1
 1668 0004 FF       		.byte	-1
 1669 0005 FF       		.byte	-1
 1670 0006 FF       		.byte	-1
 1671 0007 FF       		.byte	-1
 1672 0008 FF       		.byte	-1
 1673 0009 FF       		.byte	-1
 1674 000a FF       		.byte	-1
 1675 000b FF       		.byte	-1
 1676 000c 7E       		.byte	126
 1677 000d FB       		.byte	-5
 1678 000e FF       		.byte	-1
 1679 000f FF       		.byte	-1
 1680              		.text
 1681              	.Letext0:
 1682              		.file 2 "D:/Freescale/CodeWarrior11/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 1683              		.file 3 "C:/Users/David/Desktop/DronePrototype/Project_Headers/MKL25Z4.h"
 1684              		.file 4 "../Generated_Code/Cpu.h"
 1685              		.file 5 "C:/Users/David/Desktop/DronePrototype/Project_Headers/global.h"
 1686              		.file 6 "C:/Users/David/Desktop/DronePrototype/Project_Headers/Acc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Cpu.c
                            *COM*:00000001 AccReady
                            *COM*:00000001 PrintReady
                            *COM*:00000006 AccData
                            *COM*:00000002 Xout_14_bit
                            *COM*:00000002 Yout_14_bit
                            *COM*:00000002 Zout_14_bit
                            *COM*:00000004 Zout_g
                            *COM*:00000001 Xoffset
                            *COM*:00000001 Yoffset
                            *COM*:00000001 Zoffset
                            *COM*:00000001 SR_reg
C:\Users\David\AppData\Local\Temp\cco6llAc.s:32     .bss.SR_lock:00000000 SR_lock
C:\Users\David\AppData\Local\Temp\cco6llAc.s:33     .bss.SR_lock:00000000 $d
C:\Users\David\AppData\Local\Temp\cco6llAc.s:35     .text.Cpu_INT_NMIInterrupt:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:40     .text.Cpu_INT_NMIInterrupt:00000000 Cpu_INT_NMIInterrupt
C:\Users\David\AppData\Local\Temp\cco6llAc.s:63     .text.Cpu_ivINT_Hard_Fault:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:68     .text.Cpu_ivINT_Hard_Fault:00000000 Cpu_ivINT_Hard_Fault
C:\Users\David\AppData\Local\Temp\cco6llAc.s:93     .text.Cpu_ivINT_Reserved4:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:98     .text.Cpu_ivINT_Reserved4:00000000 Cpu_ivINT_Reserved4
C:\Users\David\AppData\Local\Temp\cco6llAc.s:123    .text.Cpu_ivINT_Reserved5:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:128    .text.Cpu_ivINT_Reserved5:00000000 Cpu_ivINT_Reserved5
C:\Users\David\AppData\Local\Temp\cco6llAc.s:153    .text.Cpu_ivINT_Reserved6:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:158    .text.Cpu_ivINT_Reserved6:00000000 Cpu_ivINT_Reserved6
C:\Users\David\AppData\Local\Temp\cco6llAc.s:183    .text.Cpu_ivINT_Reserved7:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:188    .text.Cpu_ivINT_Reserved7:00000000 Cpu_ivINT_Reserved7
C:\Users\David\AppData\Local\Temp\cco6llAc.s:213    .text.Cpu_ivINT_Reserved8:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:218    .text.Cpu_ivINT_Reserved8:00000000 Cpu_ivINT_Reserved8
C:\Users\David\AppData\Local\Temp\cco6llAc.s:243    .text.Cpu_ivINT_Reserved9:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:248    .text.Cpu_ivINT_Reserved9:00000000 Cpu_ivINT_Reserved9
C:\Users\David\AppData\Local\Temp\cco6llAc.s:273    .text.Cpu_ivINT_Reserved10:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:278    .text.Cpu_ivINT_Reserved10:00000000 Cpu_ivINT_Reserved10
C:\Users\David\AppData\Local\Temp\cco6llAc.s:303    .text.Cpu_ivINT_SVCall:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:308    .text.Cpu_ivINT_SVCall:00000000 Cpu_ivINT_SVCall
C:\Users\David\AppData\Local\Temp\cco6llAc.s:333    .text.Cpu_ivINT_Reserved12:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:338    .text.Cpu_ivINT_Reserved12:00000000 Cpu_ivINT_Reserved12
C:\Users\David\AppData\Local\Temp\cco6llAc.s:363    .text.Cpu_ivINT_Reserved13:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:368    .text.Cpu_ivINT_Reserved13:00000000 Cpu_ivINT_Reserved13
C:\Users\David\AppData\Local\Temp\cco6llAc.s:393    .text.Cpu_ivINT_PendableSrvReq:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:398    .text.Cpu_ivINT_PendableSrvReq:00000000 Cpu_ivINT_PendableSrvReq
C:\Users\David\AppData\Local\Temp\cco6llAc.s:423    .text.Cpu_ivINT_DMA0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:428    .text.Cpu_ivINT_DMA0:00000000 Cpu_ivINT_DMA0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:453    .text.Cpu_ivINT_DMA1:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:458    .text.Cpu_ivINT_DMA1:00000000 Cpu_ivINT_DMA1
C:\Users\David\AppData\Local\Temp\cco6llAc.s:483    .text.Cpu_ivINT_DMA2:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:488    .text.Cpu_ivINT_DMA2:00000000 Cpu_ivINT_DMA2
C:\Users\David\AppData\Local\Temp\cco6llAc.s:513    .text.Cpu_ivINT_DMA3:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:518    .text.Cpu_ivINT_DMA3:00000000 Cpu_ivINT_DMA3
C:\Users\David\AppData\Local\Temp\cco6llAc.s:543    .text.Cpu_ivINT_Reserved20:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:548    .text.Cpu_ivINT_Reserved20:00000000 Cpu_ivINT_Reserved20
C:\Users\David\AppData\Local\Temp\cco6llAc.s:573    .text.Cpu_ivINT_FTFA:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:578    .text.Cpu_ivINT_FTFA:00000000 Cpu_ivINT_FTFA
C:\Users\David\AppData\Local\Temp\cco6llAc.s:603    .text.Cpu_ivINT_LVD_LVW:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:608    .text.Cpu_ivINT_LVD_LVW:00000000 Cpu_ivINT_LVD_LVW
C:\Users\David\AppData\Local\Temp\cco6llAc.s:633    .text.Cpu_ivINT_LLW:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:638    .text.Cpu_ivINT_LLW:00000000 Cpu_ivINT_LLW
C:\Users\David\AppData\Local\Temp\cco6llAc.s:663    .text.Cpu_ivINT_I2C0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:668    .text.Cpu_ivINT_I2C0:00000000 Cpu_ivINT_I2C0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:693    .text.Cpu_ivINT_I2C1:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:698    .text.Cpu_ivINT_I2C1:00000000 Cpu_ivINT_I2C1
C:\Users\David\AppData\Local\Temp\cco6llAc.s:723    .text.Cpu_ivINT_SPI0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:728    .text.Cpu_ivINT_SPI0:00000000 Cpu_ivINT_SPI0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:753    .text.Cpu_ivINT_SPI1:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:758    .text.Cpu_ivINT_SPI1:00000000 Cpu_ivINT_SPI1
C:\Users\David\AppData\Local\Temp\cco6llAc.s:783    .text.Cpu_ivINT_UART0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:788    .text.Cpu_ivINT_UART0:00000000 Cpu_ivINT_UART0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:813    .text.Cpu_ivINT_UART1:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:818    .text.Cpu_ivINT_UART1:00000000 Cpu_ivINT_UART1
C:\Users\David\AppData\Local\Temp\cco6llAc.s:843    .text.Cpu_ivINT_UART2:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:848    .text.Cpu_ivINT_UART2:00000000 Cpu_ivINT_UART2
C:\Users\David\AppData\Local\Temp\cco6llAc.s:873    .text.Cpu_ivINT_ADC0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:878    .text.Cpu_ivINT_ADC0:00000000 Cpu_ivINT_ADC0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:903    .text.Cpu_ivINT_CMP0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:908    .text.Cpu_ivINT_CMP0:00000000 Cpu_ivINT_CMP0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:933    .text.Cpu_ivINT_TPM1:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:938    .text.Cpu_ivINT_TPM1:00000000 Cpu_ivINT_TPM1
C:\Users\David\AppData\Local\Temp\cco6llAc.s:963    .text.Cpu_ivINT_TPM2:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:968    .text.Cpu_ivINT_TPM2:00000000 Cpu_ivINT_TPM2
C:\Users\David\AppData\Local\Temp\cco6llAc.s:993    .text.Cpu_ivINT_RTC:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:998    .text.Cpu_ivINT_RTC:00000000 Cpu_ivINT_RTC
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1023   .text.Cpu_ivINT_RTC_Seconds:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1028   .text.Cpu_ivINT_RTC_Seconds:00000000 Cpu_ivINT_RTC_Seconds
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1053   .text.Cpu_ivINT_PIT:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1058   .text.Cpu_ivINT_PIT:00000000 Cpu_ivINT_PIT
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1083   .text.Cpu_ivINT_Reserved39:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1088   .text.Cpu_ivINT_Reserved39:00000000 Cpu_ivINT_Reserved39
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1113   .text.Cpu_ivINT_USB0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1118   .text.Cpu_ivINT_USB0:00000000 Cpu_ivINT_USB0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1143   .text.Cpu_ivINT_DAC0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1148   .text.Cpu_ivINT_DAC0:00000000 Cpu_ivINT_DAC0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1173   .text.Cpu_ivINT_TSI0:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1178   .text.Cpu_ivINT_TSI0:00000000 Cpu_ivINT_TSI0
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1203   .text.Cpu_ivINT_MCG:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1208   .text.Cpu_ivINT_MCG:00000000 Cpu_ivINT_MCG
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1233   .text.Cpu_ivINT_LPTimer:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1238   .text.Cpu_ivINT_LPTimer:00000000 Cpu_ivINT_LPTimer
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1263   .text.Cpu_ivINT_Reserved45:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1268   .text.Cpu_ivINT_Reserved45:00000000 Cpu_ivINT_Reserved45
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1293   .text.Cpu_ivINT_PORTD:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1298   .text.Cpu_ivINT_PORTD:00000000 Cpu_ivINT_PORTD
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1323   .text.__init_hardware:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1328   .text.__init_hardware:00000000 __init_hardware
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1477   .text.__init_hardware:000000e0 $d
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1493   .text.PE_low_level_init:00000000 $t
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1498   .text.PE_low_level_init:00000000 PE_low_level_init
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1645   .text.PE_low_level_init:000000ec $d
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1663   .cfmconfig:00000000 _cfm
C:\Users\David\AppData\Local\Temp\cco6llAc.s:1660   .cfmconfig:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Cpu_OnNMIINT
__vect_table
WAIT1_Init
BitIoLdd1_Init
LEDG_Init
BitIoLdd2_Init
LEDB_Init
ExtIntLdd1_Init
ST1_Init
BitIoLdd3_Init
LEDR_Init
