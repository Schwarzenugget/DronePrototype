   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ExtIntLdd1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC,"aw",%nobits
  18              		.align	2
  21              	DeviceDataPrv__DEFAULT_RTOS_ALLOC:
  22 0000 00000000 		.space	4
  23              		.section	.bss.INT_PORTA__DEFAULT_RTOS_ISRPARAM,"aw",%nobits
  24              		.align	2
  27              	INT_PORTA__DEFAULT_RTOS_ISRPARAM:
  28 0000 00000000 		.space	4
  29              		.section	.text.ExtIntLdd1_Init,"ax",%progbits
  30              		.align	2
  31              		.global	ExtIntLdd1_Init
  32              		.code	16
  33              		.thumb_func
  35              	ExtIntLdd1_Init:
  36              	.LFB0:
  37              		.file 1 "../Generated_Code/ExtIntLdd1.c"
   1:../Generated_Code/ExtIntLdd1.c **** /* ###################################################################
   2:../Generated_Code/ExtIntLdd1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/ExtIntLdd1.c **** **     Filename    : ExtIntLdd1.c
   4:../Generated_Code/ExtIntLdd1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/ExtIntLdd1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/ExtIntLdd1.c **** **     Component   : ExtInt_LDD
   7:../Generated_Code/ExtIntLdd1.c **** **     Version     : Component 02.156, Driver 01.02, CPU db: 3.00.000
   8:../Generated_Code/ExtIntLdd1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/ExtIntLdd1.c **** **     Date/Time   : 2018-06-19, 10:46, # CodeGen: 72
  10:../Generated_Code/ExtIntLdd1.c **** **     Abstract    :
  11:../Generated_Code/ExtIntLdd1.c **** **         This component, "ExtInt_LDD", provide a low level API 
  12:../Generated_Code/ExtIntLdd1.c **** **         for unified access of external interrupts handling
  13:../Generated_Code/ExtIntLdd1.c **** **         across various device designs.
  14:../Generated_Code/ExtIntLdd1.c **** **         The component uses one pin which generates interrupt on 
  15:../Generated_Code/ExtIntLdd1.c **** **         selected edge.
  16:../Generated_Code/ExtIntLdd1.c **** **     Settings    :
  17:../Generated_Code/ExtIntLdd1.c **** **          Component name                                 : ExtIntLdd1
  18:../Generated_Code/ExtIntLdd1.c **** **          Pin                                            : PTA14/SPI0_PCS0/UART0_TX
  19:../Generated_Code/ExtIntLdd1.c **** **          Pin signal                                     : 
  20:../Generated_Code/ExtIntLdd1.c **** **          Generate interrupt on                          : falling edge
  21:../Generated_Code/ExtIntLdd1.c **** **          Interrupt                                      : INT_PORTA
  22:../Generated_Code/ExtIntLdd1.c **** **          Interrupt priority                             : medium priority
  23:../Generated_Code/ExtIntLdd1.c **** **          Initialization                                 : 
  24:../Generated_Code/ExtIntLdd1.c **** **            Enabled in init. code                        : yes
  25:../Generated_Code/ExtIntLdd1.c **** **            Auto initialization                          : yes
  26:../Generated_Code/ExtIntLdd1.c **** **          Threshold level                                : 0
  27:../Generated_Code/ExtIntLdd1.c **** **     Contents    :
  28:../Generated_Code/ExtIntLdd1.c **** **         Init   - LDD_TDeviceData* ExtIntLdd1_Init(LDD_TUserData *UserDataPtr);
  29:../Generated_Code/ExtIntLdd1.c **** **         GetVal - bool ExtIntLdd1_GetVal(LDD_TDeviceData *DeviceDataPtr);
  30:../Generated_Code/ExtIntLdd1.c **** **
  31:../Generated_Code/ExtIntLdd1.c **** **     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
  32:../Generated_Code/ExtIntLdd1.c **** **     All Rights Reserved.
  33:../Generated_Code/ExtIntLdd1.c **** **     
  34:../Generated_Code/ExtIntLdd1.c **** **     Redistribution and use in source and binary forms, with or without modification,
  35:../Generated_Code/ExtIntLdd1.c **** **     are permitted provided that the following conditions are met:
  36:../Generated_Code/ExtIntLdd1.c **** **     
  37:../Generated_Code/ExtIntLdd1.c **** **     o Redistributions of source code must retain the above copyright notice, this list
  38:../Generated_Code/ExtIntLdd1.c **** **       of conditions and the following disclaimer.
  39:../Generated_Code/ExtIntLdd1.c **** **     
  40:../Generated_Code/ExtIntLdd1.c **** **     o Redistributions in binary form must reproduce the above copyright notice, this
  41:../Generated_Code/ExtIntLdd1.c **** **       list of conditions and the following disclaimer in the documentation and/or
  42:../Generated_Code/ExtIntLdd1.c **** **       other materials provided with the distribution.
  43:../Generated_Code/ExtIntLdd1.c **** **     
  44:../Generated_Code/ExtIntLdd1.c **** **     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
  45:../Generated_Code/ExtIntLdd1.c **** **       contributors may be used to endorse or promote products derived from this
  46:../Generated_Code/ExtIntLdd1.c **** **       software without specific prior written permission.
  47:../Generated_Code/ExtIntLdd1.c **** **     
  48:../Generated_Code/ExtIntLdd1.c **** **     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  49:../Generated_Code/ExtIntLdd1.c **** **     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  50:../Generated_Code/ExtIntLdd1.c **** **     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  51:../Generated_Code/ExtIntLdd1.c **** **     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  52:../Generated_Code/ExtIntLdd1.c **** **     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  53:../Generated_Code/ExtIntLdd1.c **** **     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  54:../Generated_Code/ExtIntLdd1.c **** **     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  55:../Generated_Code/ExtIntLdd1.c **** **     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  56:../Generated_Code/ExtIntLdd1.c **** **     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  57:../Generated_Code/ExtIntLdd1.c **** **     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  58:../Generated_Code/ExtIntLdd1.c **** **     
  59:../Generated_Code/ExtIntLdd1.c **** **     http: www.freescale.com
  60:../Generated_Code/ExtIntLdd1.c **** **     mail: support@freescale.com
  61:../Generated_Code/ExtIntLdd1.c **** ** ###################################################################*/
  62:../Generated_Code/ExtIntLdd1.c **** /*!
  63:../Generated_Code/ExtIntLdd1.c **** ** @file ExtIntLdd1.c
  64:../Generated_Code/ExtIntLdd1.c **** ** @version 01.02
  65:../Generated_Code/ExtIntLdd1.c **** ** @brief
  66:../Generated_Code/ExtIntLdd1.c **** **         This component, "ExtInt_LDD", provide a low level API 
  67:../Generated_Code/ExtIntLdd1.c **** **         for unified access of external interrupts handling
  68:../Generated_Code/ExtIntLdd1.c **** **         across various device designs.
  69:../Generated_Code/ExtIntLdd1.c **** **         The component uses one pin which generates interrupt on 
  70:../Generated_Code/ExtIntLdd1.c **** **         selected edge.
  71:../Generated_Code/ExtIntLdd1.c **** */         
  72:../Generated_Code/ExtIntLdd1.c **** /*!
  73:../Generated_Code/ExtIntLdd1.c **** **  @addtogroup ExtIntLdd1_module ExtIntLdd1 module documentation
  74:../Generated_Code/ExtIntLdd1.c **** **  @{
  75:../Generated_Code/ExtIntLdd1.c **** */         
  76:../Generated_Code/ExtIntLdd1.c **** 
  77:../Generated_Code/ExtIntLdd1.c **** /* MODULE ExtIntLdd1. */
  78:../Generated_Code/ExtIntLdd1.c **** 
  79:../Generated_Code/ExtIntLdd1.c **** #include "Acc.h"
  80:../Generated_Code/ExtIntLdd1.c **** #include "ExtIntLdd1.h"
  81:../Generated_Code/ExtIntLdd1.c **** /* {Default RTOS Adapter} No RTOS includes */
  82:../Generated_Code/ExtIntLdd1.c **** 
  83:../Generated_Code/ExtIntLdd1.c **** #ifdef __cplusplus
  84:../Generated_Code/ExtIntLdd1.c **** extern "C" {
  85:../Generated_Code/ExtIntLdd1.c **** #endif 
  86:../Generated_Code/ExtIntLdd1.c **** 
  87:../Generated_Code/ExtIntLdd1.c **** typedef struct {
  88:../Generated_Code/ExtIntLdd1.c ****   LDD_TUserData *UserData;             /* RTOS device data structure */
  89:../Generated_Code/ExtIntLdd1.c **** } ExtIntLdd1_TDeviceData, *ExtIntLdd1_TDeviceDataPtr; /* Device data structure type */
  90:../Generated_Code/ExtIntLdd1.c **** 
  91:../Generated_Code/ExtIntLdd1.c **** /* {Default RTOS Adapter} Static object used for simulation of dynamic driver memory allocation */
  92:../Generated_Code/ExtIntLdd1.c **** static ExtIntLdd1_TDeviceData DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  93:../Generated_Code/ExtIntLdd1.c **** /* {Default RTOS Adapter} Global variable used for passing a parameter into ISR */
  94:../Generated_Code/ExtIntLdd1.c **** static ExtIntLdd1_TDeviceData * INT_PORTA__DEFAULT_RTOS_ISRPARAM;
  95:../Generated_Code/ExtIntLdd1.c **** 
  96:../Generated_Code/ExtIntLdd1.c **** /*
  97:../Generated_Code/ExtIntLdd1.c **** ** ===================================================================
  98:../Generated_Code/ExtIntLdd1.c **** **     Method      :  ExtIntLdd1_Init (component ExtInt_LDD)
  99:../Generated_Code/ExtIntLdd1.c **** */
 100:../Generated_Code/ExtIntLdd1.c **** /*!
 101:../Generated_Code/ExtIntLdd1.c **** **     @brief
 102:../Generated_Code/ExtIntLdd1.c **** **         This method initializes the associated peripheral(s) and the
 103:../Generated_Code/ExtIntLdd1.c **** **         component internal variables. The method is called
 104:../Generated_Code/ExtIntLdd1.c **** **         automatically as a part of the application initialization
 105:../Generated_Code/ExtIntLdd1.c **** **         code.
 106:../Generated_Code/ExtIntLdd1.c **** **     @param
 107:../Generated_Code/ExtIntLdd1.c **** **         UserDataPtr     - Pointer to the RTOS device
 108:../Generated_Code/ExtIntLdd1.c **** **                           structure. This pointer will be passed to
 109:../Generated_Code/ExtIntLdd1.c **** **                           all events as parameter.
 110:../Generated_Code/ExtIntLdd1.c **** **     @return
 111:../Generated_Code/ExtIntLdd1.c **** **                         - Pointer to the dynamically allocated private
 112:../Generated_Code/ExtIntLdd1.c **** **                           structure or NULL if there was an error.
 113:../Generated_Code/ExtIntLdd1.c **** */
 114:../Generated_Code/ExtIntLdd1.c **** /* ===================================================================*/
 115:../Generated_Code/ExtIntLdd1.c **** LDD_TDeviceData* ExtIntLdd1_Init(LDD_TUserData *UserDataPtr)
 116:../Generated_Code/ExtIntLdd1.c **** {
  38              		.loc 1 116 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 84B0     		sub	sp, sp, #16
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 24
  48 0004 00AF     		add	r7, sp, #0
  49              	.LCFI2:
  50              		.cfi_def_cfa_register 7
  51 0006 7860     		str	r0, [r7, #4]
 117:../Generated_Code/ExtIntLdd1.c ****   /* Allocate LDD device structure */
 118:../Generated_Code/ExtIntLdd1.c ****   ExtIntLdd1_TDeviceData *DeviceDataPrv;
 119:../Generated_Code/ExtIntLdd1.c **** 
 120:../Generated_Code/ExtIntLdd1.c ****   /* {Default RTOS Adapter} Driver memory allocation: Dynamic allocation is simulated by a pointer 
 121:../Generated_Code/ExtIntLdd1.c ****   DeviceDataPrv = &DeviceDataPrv__DEFAULT_RTOS_ALLOC;
  52              		.loc 1 121 0
  53 0008 1A4B     		ldr	r3, .L3
  54 000a FB60     		str	r3, [r7, #12]
 122:../Generated_Code/ExtIntLdd1.c ****   /* Store the UserData pointer */
 123:../Generated_Code/ExtIntLdd1.c ****   DeviceDataPrv->UserData = UserDataPtr;
  55              		.loc 1 123 0
  56 000c FB68     		ldr	r3, [r7, #12]
  57 000e 7A68     		ldr	r2, [r7, #4]
  58 0010 1A60     		str	r2, [r3]
 124:../Generated_Code/ExtIntLdd1.c ****   /* Interrupt vector(s) allocation */
 125:../Generated_Code/ExtIntLdd1.c ****   /* {Default RTOS Adapter} Set interrupt vector: IVT is static, ISR parameter is passed by the glo
 126:../Generated_Code/ExtIntLdd1.c ****   INT_PORTA__DEFAULT_RTOS_ISRPARAM = DeviceDataPrv;
  59              		.loc 1 126 0
  60 0012 194B     		ldr	r3, .L3+4
  61 0014 FA68     		ldr	r2, [r7, #12]
  62 0016 1A60     		str	r2, [r3]
 127:../Generated_Code/ExtIntLdd1.c ****   /* Initialization of Port Control registers */
 128:../Generated_Code/ExtIntLdd1.c ****   /* PORTA_PCR14: ISF=0,MUX=1 */
 129:../Generated_Code/ExtIntLdd1.c ****   PORTA_PCR14 = (uint32_t)((PORTA_PCR14 & (uint32_t)~(uint32_t)(
  63              		.loc 1 129 0
  64 0018 184B     		ldr	r3, .L3+8
  65 001a 184A     		ldr	r2, .L3+8
  66 001c 916B     		ldr	r1, [r2, #56]
  67 001e 184A     		ldr	r2, .L3+12
  68 0020 0A40     		and	r2, r1
  69 0022 8021     		mov	r1, #128
  70 0024 4900     		lsl	r1, r1, #1
  71 0026 0A43     		orr	r2, r1
  72 0028 9A63     		str	r2, [r3, #56]
 130:../Generated_Code/ExtIntLdd1.c ****                  PORT_PCR_ISF_MASK |
 131:../Generated_Code/ExtIntLdd1.c ****                  PORT_PCR_MUX(0x06)
 132:../Generated_Code/ExtIntLdd1.c ****                 )) | (uint32_t)(
 133:../Generated_Code/ExtIntLdd1.c ****                  PORT_PCR_MUX(0x01)
 134:../Generated_Code/ExtIntLdd1.c ****                 ));
 135:../Generated_Code/ExtIntLdd1.c ****   /* PORTA_PCR14: ISF=1,IRQC=0x0A */
 136:../Generated_Code/ExtIntLdd1.c ****   PORTA_PCR14 = (uint32_t)((PORTA_PCR14 & (uint32_t)~(uint32_t)(
  73              		.loc 1 136 0
  74 002a 144B     		ldr	r3, .L3+8
  75 002c 134A     		ldr	r2, .L3+8
  76 002e 916B     		ldr	r1, [r2, #56]
  77 0030 144A     		ldr	r2, .L3+16
  78 0032 0A40     		and	r2, r1
  79 0034 8521     		mov	r1, #133
  80 0036 4904     		lsl	r1, r1, #17
  81 0038 0A43     		orr	r2, r1
  82 003a 9A63     		str	r2, [r3, #56]
 137:../Generated_Code/ExtIntLdd1.c ****                  PORT_PCR_IRQC(0x05)
 138:../Generated_Code/ExtIntLdd1.c ****                 )) | (uint32_t)(
 139:../Generated_Code/ExtIntLdd1.c ****                  PORT_PCR_ISF_MASK |
 140:../Generated_Code/ExtIntLdd1.c ****                  PORT_PCR_IRQC(0x0A)
 141:../Generated_Code/ExtIntLdd1.c ****                 ));
 142:../Generated_Code/ExtIntLdd1.c ****   /* NVIC_IPR7: PRI_30=0x80 */
 143:../Generated_Code/ExtIntLdd1.c ****   NVIC_IPR7 = (uint32_t)((NVIC_IPR7 & (uint32_t)~(uint32_t)(
  83              		.loc 1 143 0
  84 003c 124A     		ldr	r2, .L3+20
  85 003e 1249     		ldr	r1, .L3+20
  86 0040 C723     		mov	r3, #199
  87 0042 9B00     		lsl	r3, r3, #2
  88 0044 C958     		ldr	r1, [r1, r3]
  89 0046 114B     		ldr	r3, .L3+24
  90 0048 0B40     		and	r3, r1
  91 004a 8021     		mov	r1, #128
  92 004c 0904     		lsl	r1, r1, #16
  93 004e 1943     		orr	r1, r3
  94 0050 C723     		mov	r3, #199
  95 0052 9B00     		lsl	r3, r3, #2
  96 0054 D150     		str	r1, [r2, r3]
 144:../Generated_Code/ExtIntLdd1.c ****                NVIC_IP_PRI_30(0x7F)
 145:../Generated_Code/ExtIntLdd1.c ****               )) | (uint32_t)(
 146:../Generated_Code/ExtIntLdd1.c ****                NVIC_IP_PRI_30(0x80)
 147:../Generated_Code/ExtIntLdd1.c ****               ));
 148:../Generated_Code/ExtIntLdd1.c ****   /* NVIC_ISER: SETENA|=0x40000000 */
 149:../Generated_Code/ExtIntLdd1.c ****   NVIC_ISER |= NVIC_ISER_SETENA(0x40000000);
  97              		.loc 1 149 0
  98 0056 0C4B     		ldr	r3, .L3+20
  99 0058 0B4A     		ldr	r2, .L3+20
 100 005a 1268     		ldr	r2, [r2]
 101 005c 8021     		mov	r1, #128
 102 005e C905     		lsl	r1, r1, #23
 103 0060 0A43     		orr	r2, r1
 104 0062 1A60     		str	r2, [r3]
 150:../Generated_Code/ExtIntLdd1.c ****   /* Registration of the device structure */
 151:../Generated_Code/ExtIntLdd1.c ****   PE_LDD_RegisterDeviceStructure(PE_LDD_COMPONENT_ExtIntLdd1_ID,DeviceDataPrv);
 105              		.loc 1 151 0
 106 0064 0A4B     		ldr	r3, .L3+28
 107 0066 FA68     		ldr	r2, [r7, #12]
 108 0068 1A61     		str	r2, [r3, #16]
 152:../Generated_Code/ExtIntLdd1.c ****   return ((LDD_TDeviceData *)DeviceDataPrv);
 109              		.loc 1 152 0
 110 006a FB68     		ldr	r3, [r7, #12]
 153:../Generated_Code/ExtIntLdd1.c **** }
 111              		.loc 1 153 0
 112 006c 181C     		mov	r0, r3
 113 006e BD46     		mov	sp, r7
 114 0070 04B0     		add	sp, sp, #16
 115              		@ sp needed for prologue
 116 0072 80BD     		pop	{r7, pc}
 117              	.L4:
 118              		.align	2
 119              	.L3:
 120 0074 00000000 		.word	DeviceDataPrv__DEFAULT_RTOS_ALLOC
 121 0078 00000000 		.word	INT_PORTA__DEFAULT_RTOS_ISRPARAM
 122 007c 00900440 		.word	1074040832
 123 0080 FFF8FFFE 		.word	-16779009
 124 0084 FFFFF0FE 		.word	-17760257
 125 0088 00E100E0 		.word	-536813312
 126 008c FFFF00FF 		.word	-16711681
 127 0090 00000000 		.word	PE_LDD_DeviceDataList
 128              		.cfi_endproc
 129              	.LFE0:
 131              		.section	.text.ExtIntLdd1_Interrupt,"ax",%progbits
 132              		.align	2
 133              		.global	ExtIntLdd1_Interrupt
 134              		.code	16
 135              		.thumb_func
 137              	ExtIntLdd1_Interrupt:
 138              	.LFB1:
 154:../Generated_Code/ExtIntLdd1.c **** 
 155:../Generated_Code/ExtIntLdd1.c **** /*
 156:../Generated_Code/ExtIntLdd1.c **** ** ===================================================================
 157:../Generated_Code/ExtIntLdd1.c **** **     Method      :  ExtIntLdd1_Interrupt (component ExtInt_LDD)
 158:../Generated_Code/ExtIntLdd1.c **** **
 159:../Generated_Code/ExtIntLdd1.c **** **     Description :
 160:../Generated_Code/ExtIntLdd1.c **** **         The method services the interrupt of the selected peripheral(s)
 161:../Generated_Code/ExtIntLdd1.c **** **         and eventually invokes event(s) of the component.
 162:../Generated_Code/ExtIntLdd1.c **** **         This method is internal. It is used by Processor Expert only.
 163:../Generated_Code/ExtIntLdd1.c **** ** ===================================================================
 164:../Generated_Code/ExtIntLdd1.c **** */
 165:../Generated_Code/ExtIntLdd1.c **** PE_ISR(ExtIntLdd1_Interrupt)
 166:../Generated_Code/ExtIntLdd1.c **** {
 139              		.loc 1 166 0
 140              		.cfi_startproc
 141 0000 80B5     		push	{r7, lr}
 142              	.LCFI3:
 143              		.cfi_def_cfa_offset 8
 144              		.cfi_offset 7, -8
 145              		.cfi_offset 14, -4
 146 0002 82B0     		sub	sp, sp, #8
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 16
 149 0004 00AF     		add	r7, sp, #0
 150              	.LCFI5:
 151              		.cfi_def_cfa_register 7
 167:../Generated_Code/ExtIntLdd1.c ****   /* {Default RTOS Adapter} ISR parameter is passed through the global variable */
 168:../Generated_Code/ExtIntLdd1.c ****   ExtIntLdd1_TDeviceDataPtr DeviceDataPrv = INT_PORTA__DEFAULT_RTOS_ISRPARAM;
 152              		.loc 1 168 0
 153 0006 094B     		ldr	r3, .L6
 154 0008 1B68     		ldr	r3, [r3]
 155 000a 7B60     		str	r3, [r7, #4]
 169:../Generated_Code/ExtIntLdd1.c **** 
 170:../Generated_Code/ExtIntLdd1.c ****   /* Clear the interrupt flag */
 171:../Generated_Code/ExtIntLdd1.c ****   PORT_PDD_ClearPinInterruptFlag(PORTA_BASE_PTR, ExtIntLdd1_PIN_INDEX);
 156              		.loc 1 171 0
 157 000c 084B     		ldr	r3, .L6+4
 158 000e 084A     		ldr	r2, .L6+4
 159 0010 926B     		ldr	r2, [r2, #56]
 160 0012 8021     		mov	r1, #128
 161 0014 4904     		lsl	r1, r1, #17
 162 0016 0A43     		orr	r2, r1
 163 0018 9A63     		str	r2, [r3, #56]
 172:../Generated_Code/ExtIntLdd1.c ****   /* Call OnInterrupt event */
 173:../Generated_Code/ExtIntLdd1.c ****   ExtIntLdd1_OnInterrupt(DeviceDataPrv->UserData);
 164              		.loc 1 173 0
 165 001a 7B68     		ldr	r3, [r7, #4]
 166 001c 1B68     		ldr	r3, [r3]
 167 001e 181C     		mov	r0, r3
 168 0020 FFF7FEFF 		bl	ExtIntLdd1_OnInterrupt
 174:../Generated_Code/ExtIntLdd1.c **** }
 169              		.loc 1 174 0
 170 0024 BD46     		mov	sp, r7
 171 0026 02B0     		add	sp, sp, #8
 172              		@ sp needed for prologue
 173 0028 80BD     		pop	{r7, pc}
 174              	.L7:
 175 002a C046     		.align	2
 176              	.L6:
 177 002c 00000000 		.word	INT_PORTA__DEFAULT_RTOS_ISRPARAM
 178 0030 00900440 		.word	1074040832
 179              		.cfi_endproc
 180              	.LFE1:
 182              		.section	.text.ExtIntLdd1_GetVal,"ax",%progbits
 183              		.align	2
 184              		.global	ExtIntLdd1_GetVal
 185              		.code	16
 186              		.thumb_func
 188              	ExtIntLdd1_GetVal:
 189              	.LFB2:
 175:../Generated_Code/ExtIntLdd1.c **** 
 176:../Generated_Code/ExtIntLdd1.c **** /*
 177:../Generated_Code/ExtIntLdd1.c **** ** ===================================================================
 178:../Generated_Code/ExtIntLdd1.c **** **     Method      :  ExtIntLdd1_GetVal (component ExtInt_LDD)
 179:../Generated_Code/ExtIntLdd1.c **** */
 180:../Generated_Code/ExtIntLdd1.c **** /*!
 181:../Generated_Code/ExtIntLdd1.c **** **     @brief
 182:../Generated_Code/ExtIntLdd1.c **** **         Returns the actual value of the input pin of the component.
 183:../Generated_Code/ExtIntLdd1.c **** **     @param
 184:../Generated_Code/ExtIntLdd1.c **** **         DeviceDataPtr   - Device data structure
 185:../Generated_Code/ExtIntLdd1.c **** **                           pointer returned by <Init> method.
 186:../Generated_Code/ExtIntLdd1.c **** **     @return
 187:../Generated_Code/ExtIntLdd1.c **** **                         - Returned input value. Possible values:
 188:../Generated_Code/ExtIntLdd1.c **** **                           <false> - logical "0" (Low level) <true> -
 189:../Generated_Code/ExtIntLdd1.c **** **                           logical "1" (High level)
 190:../Generated_Code/ExtIntLdd1.c **** */
 191:../Generated_Code/ExtIntLdd1.c **** /* ===================================================================*/
 192:../Generated_Code/ExtIntLdd1.c **** bool ExtIntLdd1_GetVal(LDD_TDeviceData *DeviceDataPtr)
 193:../Generated_Code/ExtIntLdd1.c **** {
 190              		.loc 1 193 0
 191              		.cfi_startproc
 192 0000 80B5     		push	{r7, lr}
 193              	.LCFI6:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 82B0     		sub	sp, sp, #8
 198              	.LCFI7:
 199              		.cfi_def_cfa_offset 16
 200 0004 00AF     		add	r7, sp, #0
 201              	.LCFI8:
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 194:../Generated_Code/ExtIntLdd1.c ****   (void)DeviceDataPtr;                 /* Parameter is not used, suppress unused argument warning *
 195:../Generated_Code/ExtIntLdd1.c ****   if ((GPIO_PDD_GetPortDataInput(PTA_BASE_PTR) & ExtIntLdd1_PIN_MASK) != 0U) {
 204              		.loc 1 195 0
 205 0008 064B     		ldr	r3, .L11
 206 000a 1A69     		ldr	r2, [r3, #16]
 207 000c 8023     		mov	r3, #128
 208 000e DB01     		lsl	r3, r3, #7
 209 0010 1340     		and	r3, r2
 210 0012 01D0     		beq	.L9
 196:../Generated_Code/ExtIntLdd1.c ****     return TRUE;
 211              		.loc 1 196 0
 212 0014 0123     		mov	r3, #1
 213 0016 00E0     		b	.L10
 214              	.L9:
 197:../Generated_Code/ExtIntLdd1.c ****   } else {
 198:../Generated_Code/ExtIntLdd1.c ****     return FALSE;
 215              		.loc 1 198 0
 216 0018 0023     		mov	r3, #0
 217              	.L10:
 199:../Generated_Code/ExtIntLdd1.c ****   }
 200:../Generated_Code/ExtIntLdd1.c **** }
 218              		.loc 1 200 0
 219 001a 181C     		mov	r0, r3
 220 001c BD46     		mov	sp, r7
 221 001e 02B0     		add	sp, sp, #8
 222              		@ sp needed for prologue
 223 0020 80BD     		pop	{r7, pc}
 224              	.L12:
 225 0022 C046     		.align	2
 226              	.L11:
 227 0024 00F00F40 		.word	1074786304
 228              		.cfi_endproc
 229              	.LFE2:
 231              		.text
 232              	.Letext0:
 233              		.file 2 "D:/Freescale/CodeWarrior11/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 234              		.file 3 "../Generated_Code/PE_Types.h"
 235              		.file 4 "C:/Users/David/Desktop/DronePrototype/Project_Headers/MKL25Z4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ExtIntLdd1.c
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:18     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 $d
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:21     .bss.DeviceDataPrv__DEFAULT_RTOS_ALLOC:00000000 DeviceDataPrv__DEFAULT_RTOS_ALLOC
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:24     .bss.INT_PORTA__DEFAULT_RTOS_ISRPARAM:00000000 $d
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:27     .bss.INT_PORTA__DEFAULT_RTOS_ISRPARAM:00000000 INT_PORTA__DEFAULT_RTOS_ISRPARAM
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:30     .text.ExtIntLdd1_Init:00000000 $t
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:35     .text.ExtIntLdd1_Init:00000000 ExtIntLdd1_Init
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:120    .text.ExtIntLdd1_Init:00000074 $d
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:132    .text.ExtIntLdd1_Interrupt:00000000 $t
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:137    .text.ExtIntLdd1_Interrupt:00000000 ExtIntLdd1_Interrupt
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:177    .text.ExtIntLdd1_Interrupt:0000002c $d
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:183    .text.ExtIntLdd1_GetVal:00000000 $t
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:188    .text.ExtIntLdd1_GetVal:00000000 ExtIntLdd1_GetVal
C:\Users\David\AppData\Local\Temp\ccJ7aGz8.s:227    .text.ExtIntLdd1_GetVal:00000024 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
PE_LDD_DeviceDataList
ExtIntLdd1_OnInterrupt
