   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"WAIT1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WAIT1_Wait10Cycles,"ax",%progbits
  18              		.align	2
  19              		.global	WAIT1_Wait10Cycles
  20              		.code	16
  21              		.thumb_func
  23              	WAIT1_Wait10Cycles:
  24              	.LFB0:
  25              		.file 1 "../Generated_Code/WAIT1.c"
   1:../Generated_Code/WAIT1.c **** /* ###################################################################
   2:../Generated_Code/WAIT1.c **** **     This component module is generated by Processor Expert. Do not modify it.
   3:../Generated_Code/WAIT1.c **** **     Filename    : WAIT1.c
   4:../Generated_Code/WAIT1.c **** **     Project     : ProcessorExpert
   5:../Generated_Code/WAIT1.c **** **     Processor   : MKL25Z128VLK4
   6:../Generated_Code/WAIT1.c **** **     Component   : Wait
   7:../Generated_Code/WAIT1.c **** **     Version     : Component 01.082, Driver 01.00, CPU db: 3.00.000
   8:../Generated_Code/WAIT1.c **** **     Compiler    : GNU C Compiler
   9:../Generated_Code/WAIT1.c **** **     Date/Time   : 2018-06-19, 13:19, # CodeGen: 79
  10:../Generated_Code/WAIT1.c **** **     Abstract    :
  11:../Generated_Code/WAIT1.c **** **          Implements busy waiting routines.
  12:../Generated_Code/WAIT1.c **** **     Settings    :
  13:../Generated_Code/WAIT1.c **** **          Component name                                 : WAIT1
  14:../Generated_Code/WAIT1.c **** **          Manual Clock Values                            : Disabled
  15:../Generated_Code/WAIT1.c **** **          Delay100usFunction                             : Delay100US
  16:../Generated_Code/WAIT1.c **** **          RTOS                                           : Disabled
  17:../Generated_Code/WAIT1.c **** **          Watchdog                                       : Disabled
  18:../Generated_Code/WAIT1.c **** **     Contents    :
  19:../Generated_Code/WAIT1.c **** **         Wait10Cycles   - void WAIT1_Wait10Cycles(void);
  20:../Generated_Code/WAIT1.c **** **         Wait100Cycles  - void WAIT1_Wait100Cycles(void);
  21:../Generated_Code/WAIT1.c **** **         WaitCycles     - void WAIT1_WaitCycles(uint16_t cycles);
  22:../Generated_Code/WAIT1.c **** **         WaitLongCycles - void WAIT1_WaitLongCycles(uint32_t cycles);
  23:../Generated_Code/WAIT1.c **** **         Waitms         - void WAIT1_Waitms(uint16_t ms);
  24:../Generated_Code/WAIT1.c **** **         Waitus         - void WAIT1_Waitus(uint16_t us);
  25:../Generated_Code/WAIT1.c **** **         Waitns         - void WAIT1_Waitns(uint16_t ns);
  26:../Generated_Code/WAIT1.c **** **         WaitOSms       - void WAIT1_WaitOSms(void);
  27:../Generated_Code/WAIT1.c **** **         Init           - void WAIT1_Init(void);
  28:../Generated_Code/WAIT1.c **** **         DeInit         - void WAIT1_DeInit(void);
  29:../Generated_Code/WAIT1.c **** **
  30:../Generated_Code/WAIT1.c **** **     * Copyright (c) 2013-2017, Erich Styger
  31:../Generated_Code/WAIT1.c **** **      * Web:         https://mcuoneclipse.com
  32:../Generated_Code/WAIT1.c **** **      * SourceForge: https://sourceforge.net/projects/mcuoneclipse
  33:../Generated_Code/WAIT1.c **** **      * Git:         https://github.com/ErichStyger/McuOnEclipse_PEx
  34:../Generated_Code/WAIT1.c **** **      * All rights reserved.
  35:../Generated_Code/WAIT1.c **** **      *
  36:../Generated_Code/WAIT1.c **** **      * Redistribution and use in source and binary forms, with or without modification,
  37:../Generated_Code/WAIT1.c **** **      * are permitted provided that the following conditions are met:
  38:../Generated_Code/WAIT1.c **** **      *
  39:../Generated_Code/WAIT1.c **** **      * - Redistributions of source code must retain the above copyright notice, this list
  40:../Generated_Code/WAIT1.c **** **      *   of conditions and the following disclaimer.
  41:../Generated_Code/WAIT1.c **** **      *
  42:../Generated_Code/WAIT1.c **** **      * - Redistributions in binary form must reproduce the above copyright notice, this
  43:../Generated_Code/WAIT1.c **** **      *   list of conditions and the following disclaimer in the documentation and/or
  44:../Generated_Code/WAIT1.c **** **      *   other materials provided with the distribution.
  45:../Generated_Code/WAIT1.c **** **      *
  46:../Generated_Code/WAIT1.c **** **      * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  47:../Generated_Code/WAIT1.c **** **      * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  48:../Generated_Code/WAIT1.c **** **      * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  49:../Generated_Code/WAIT1.c **** **      * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
  50:../Generated_Code/WAIT1.c **** **      * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  51:../Generated_Code/WAIT1.c **** **      * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  52:../Generated_Code/WAIT1.c **** **      * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
  53:../Generated_Code/WAIT1.c **** **      * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  54:../Generated_Code/WAIT1.c **** **      * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  55:../Generated_Code/WAIT1.c **** **      * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  56:../Generated_Code/WAIT1.c **** ** ###################################################################*/
  57:../Generated_Code/WAIT1.c **** /*!
  58:../Generated_Code/WAIT1.c **** ** @file WAIT1.c
  59:../Generated_Code/WAIT1.c **** ** @version 01.00
  60:../Generated_Code/WAIT1.c **** ** @brief
  61:../Generated_Code/WAIT1.c **** **          Implements busy waiting routines.
  62:../Generated_Code/WAIT1.c **** */         
  63:../Generated_Code/WAIT1.c **** /*!
  64:../Generated_Code/WAIT1.c **** **  @addtogroup WAIT1_module WAIT1 module documentation
  65:../Generated_Code/WAIT1.c **** **  @{
  66:../Generated_Code/WAIT1.c **** */         
  67:../Generated_Code/WAIT1.c **** 
  68:../Generated_Code/WAIT1.c **** /* MODULE WAIT1. */
  69:../Generated_Code/WAIT1.c **** 
  70:../Generated_Code/WAIT1.c **** #include "WAIT1.h"
  71:../Generated_Code/WAIT1.c **** 
  72:../Generated_Code/WAIT1.c **** 
  73:../Generated_Code/WAIT1.c **** /*
  74:../Generated_Code/WAIT1.c **** ** ===================================================================
  75:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Wait10Cycles (component Wait)
  76:../Generated_Code/WAIT1.c **** **     Description :
  77:../Generated_Code/WAIT1.c **** **         Wait for 10 CPU cycles.
  78:../Generated_Code/WAIT1.c **** **     Parameters  : None
  79:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
  80:../Generated_Code/WAIT1.c **** ** ===================================================================
  81:../Generated_Code/WAIT1.c **** */
  82:../Generated_Code/WAIT1.c **** #ifdef __cplusplus  /* gcc 4.7.3 in C++ mode does not like no_instrument_function: error: can't set
  83:../Generated_Code/WAIT1.c ****   __attribute__((naked))
  84:../Generated_Code/WAIT1.c **** #else
  85:../Generated_Code/WAIT1.c ****   __attribute__((naked, no_instrument_function))
  86:../Generated_Code/WAIT1.c **** #endif
  87:../Generated_Code/WAIT1.c **** void WAIT1_Wait10Cycles(void)
  88:../Generated_Code/WAIT1.c **** {
  26              		.loc 1 88 0
  27              		.cfi_startproc
  89:../Generated_Code/WAIT1.c ****   /* This function will wait 10 CPU cycles (including call overhead). */
  90:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
  91:../Generated_Code/WAIT1.c ****   /* NOTE: Cortex-M0 and M4 have 1 cycle for a NOP */
  92:../Generated_Code/WAIT1.c ****   /* Compiler is GNUC */
  93:../Generated_Code/WAIT1.c ****   __asm (
  28              		.loc 1 93 0
  29              	@ 93 "../Generated_Code/WAIT1.c" 1
  30 0000 C046     		nop   
  31 0002 C046     		nop   
  32 0004 C046     		nop   
  33 0006 7047     		bx lr 
  34              		
  35              	@ 0 "" 2
  94:../Generated_Code/WAIT1.c ****    /* bl Wait10Cycles() to here: [4] */
  95:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
  96:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
  97:../Generated_Code/WAIT1.c ****    "nop   \n\t" /* [1] */
  98:../Generated_Code/WAIT1.c ****    "bx lr \n\t" /* [3] */
  99:../Generated_Code/WAIT1.c ****   );
 100:../Generated_Code/WAIT1.c ****   /*lint -restore */
 101:../Generated_Code/WAIT1.c **** }
  36              		.loc 1 101 0
  37              		.code	16
  38              		.cfi_endproc
  39              	.LFE0:
  41              		.section	.text.WAIT1_Wait100Cycles,"ax",%progbits
  42              		.align	2
  43              		.global	WAIT1_Wait100Cycles
  44              		.code	16
  45              		.thumb_func
  47              	WAIT1_Wait100Cycles:
  48              	.LFB1:
 102:../Generated_Code/WAIT1.c **** 
 103:../Generated_Code/WAIT1.c **** /*
 104:../Generated_Code/WAIT1.c **** ** ===================================================================
 105:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Wait100Cycles (component Wait)
 106:../Generated_Code/WAIT1.c **** **     Description :
 107:../Generated_Code/WAIT1.c **** **         Wait for 100 CPU cycles.
 108:../Generated_Code/WAIT1.c **** **     Parameters  : None
 109:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 110:../Generated_Code/WAIT1.c **** ** ===================================================================
 111:../Generated_Code/WAIT1.c **** */
 112:../Generated_Code/WAIT1.c **** #ifdef __GNUC__
 113:../Generated_Code/WAIT1.c **** #ifdef __cplusplus  /* gcc 4.7.3 in C++ mode does not like no_instrument_function: error: can't set
 114:../Generated_Code/WAIT1.c ****   __attribute__((naked))
 115:../Generated_Code/WAIT1.c **** #else
 116:../Generated_Code/WAIT1.c ****   __attribute__((naked, no_instrument_function))
 117:../Generated_Code/WAIT1.c **** #endif
 118:../Generated_Code/WAIT1.c **** #endif
 119:../Generated_Code/WAIT1.c **** void WAIT1_Wait100Cycles(void)
 120:../Generated_Code/WAIT1.c **** {
  49              		.loc 1 120 0
  50              		.cfi_startproc
 121:../Generated_Code/WAIT1.c ****   /* This function will spend 100 CPU cycles (including call overhead). */
 122:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 123:../Generated_Code/WAIT1.c ****   __asm (
  51              		.loc 1 123 0
  52              	@ 123 "../Generated_Code/WAIT1.c" 1
  53 0000 01B4     		push {r0}   
  54 0002 0020     		movs r0, #0 
  55              		loop:       
  56 0004 C046     		nop         
  57 0006 C046     		nop         
  58 0008 C046     		nop         
  59 000a C046     		nop         
  60 000c 0130     		add r0,#1   
  61 000e 0928     		cmp r0,#9   
  62 0010 F8D9     		bls loop    
  63 0012 C046     		nop         
  64 0014 C046     		nop         
  65 0016 C046     		nop         
  66 0018 C046     		nop         
  67 001a C046     		nop         
  68 001c C046     		nop         
  69 001e C046     		nop         
  70 0020 01BC     		pop {r0}    
  71 0022 7047     		bx lr       
  72              		
  73              	@ 0 "" 2
 124:../Generated_Code/WAIT1.c ****    /* bl to here:               [4] */
 125:../Generated_Code/WAIT1.c ****    "push {r0}   \n\t"        /* [2] */
 126:../Generated_Code/WAIT1.c ****    "movs r0, #0 \n\t"        /* [1] */
 127:../Generated_Code/WAIT1.c ****    "loop:       \n\t"
 128:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 129:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 130:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 131:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 132:../Generated_Code/WAIT1.c ****    "add r0,#1   \n\t"        /* [1] */
 133:../Generated_Code/WAIT1.c ****    "cmp r0,#9   \n\t"        /* [1] */
 134:../Generated_Code/WAIT1.c ****    "bls loop    \n\t"        /* [3] taken, [1] not taken */
 135:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 136:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 137:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 138:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 139:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 140:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 141:../Generated_Code/WAIT1.c ****    "nop         \n\t"        /* [1] */
 142:../Generated_Code/WAIT1.c ****    "pop {r0}    \n\t"        /* [2] */
 143:../Generated_Code/WAIT1.c ****    "bx lr       \n\t"        /* [3] */
 144:../Generated_Code/WAIT1.c ****   );
 145:../Generated_Code/WAIT1.c ****   /*lint -restore */
 146:../Generated_Code/WAIT1.c **** }
  74              		.loc 1 146 0
  75              		.code	16
  76              		.cfi_endproc
  77              	.LFE1:
  79              		.section	.text.WAIT1_WaitCycles,"ax",%progbits
  80              		.align	2
  81              		.global	WAIT1_WaitCycles
  82              		.code	16
  83              		.thumb_func
  85              	WAIT1_WaitCycles:
  86              	.LFB2:
 147:../Generated_Code/WAIT1.c **** 
 148:../Generated_Code/WAIT1.c **** /*
 149:../Generated_Code/WAIT1.c **** ** ===================================================================
 150:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitCycles (component Wait)
 151:../Generated_Code/WAIT1.c **** **     Description :
 152:../Generated_Code/WAIT1.c **** **         Wait for a specified number of CPU cycles (16bit data type).
 153:../Generated_Code/WAIT1.c **** **     Parameters  :
 154:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 155:../Generated_Code/WAIT1.c **** **         cycles          - The number of cycles to wait.
 156:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 157:../Generated_Code/WAIT1.c **** ** ===================================================================
 158:../Generated_Code/WAIT1.c **** */
 159:../Generated_Code/WAIT1.c **** void WAIT1_WaitCycles(uint16_t cycles)
 160:../Generated_Code/WAIT1.c **** {
  87              		.loc 1 160 0
  88              		.cfi_startproc
  89 0000 80B5     		push	{r7, lr}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 82B0     		sub	sp, sp, #8
  95              	.LCFI1:
  96              		.cfi_def_cfa_offset 16
  97 0004 00AF     		add	r7, sp, #0
  98              	.LCFI2:
  99              		.cfi_def_cfa_register 7
 100 0006 021C     		mov	r2, r0
 101 0008 BB1D     		add	r3, r7, #6
 102 000a 1A80     		strh	r2, [r3]
 161:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 162:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 163:../Generated_Code/WAIT1.c ****   uint32_t counter = cycles;
 164:../Generated_Code/WAIT1.c **** 
 165:../Generated_Code/WAIT1.c ****   counter += KIN1_GetCycleCounter();
 166:../Generated_Code/WAIT1.c ****   while(KIN1_GetCycleCounter()<counter) {
 167:../Generated_Code/WAIT1.c ****     /* wait */
 168:../Generated_Code/WAIT1.c ****   }
 169:../Generated_Code/WAIT1.c **** #else
 170:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 103              		.loc 1 170 0
 104 000c 06E0     		b	.L4
 105              	.L5:
 171:../Generated_Code/WAIT1.c ****     WAIT1_Wait100Cycles();
 106              		.loc 1 171 0
 107 000e FFF7FEFF 		bl	WAIT1_Wait100Cycles
 172:../Generated_Code/WAIT1.c ****     cycles -= 100;
 108              		.loc 1 172 0
 109 0012 BB1D     		add	r3, r7, #6
 110 0014 BA1D     		add	r2, r7, #6
 111 0016 1288     		ldrh	r2, [r2]
 112 0018 643A     		sub	r2, r2, #100
 113 001a 1A80     		strh	r2, [r3]
 114              	.L4:
 170:../Generated_Code/WAIT1.c ****   while(cycles > 100) {
 115              		.loc 1 170 0
 116 001c BB1D     		add	r3, r7, #6
 117 001e 1B88     		ldrh	r3, [r3]
 118 0020 642B     		cmp	r3, #100
 119 0022 F4D8     		bhi	.L5
 173:../Generated_Code/WAIT1.c ****   }
 174:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 120              		.loc 1 174 0
 121 0024 06E0     		b	.L6
 122              	.L7:
 175:../Generated_Code/WAIT1.c ****     WAIT1_Wait10Cycles();
 123              		.loc 1 175 0
 124 0026 FFF7FEFF 		bl	WAIT1_Wait10Cycles
 176:../Generated_Code/WAIT1.c ****     cycles -= 10;
 125              		.loc 1 176 0
 126 002a BB1D     		add	r3, r7, #6
 127 002c BA1D     		add	r2, r7, #6
 128 002e 1288     		ldrh	r2, [r2]
 129 0030 0A3A     		sub	r2, r2, #10
 130 0032 1A80     		strh	r2, [r3]
 131              	.L6:
 174:../Generated_Code/WAIT1.c ****   while(cycles > 10) {
 132              		.loc 1 174 0
 133 0034 BB1D     		add	r3, r7, #6
 134 0036 1B88     		ldrh	r3, [r3]
 135 0038 0A2B     		cmp	r3, #10
 136 003a F4D8     		bhi	.L7
 177:../Generated_Code/WAIT1.c ****   }
 178:../Generated_Code/WAIT1.c **** #endif
 179:../Generated_Code/WAIT1.c ****   /*lint -restore */
 180:../Generated_Code/WAIT1.c **** }
 137              		.loc 1 180 0
 138 003c BD46     		mov	sp, r7
 139 003e 02B0     		add	sp, sp, #8
 140              		@ sp needed for prologue
 141 0040 80BD     		pop	{r7, pc}
 142              		.cfi_endproc
 143              	.LFE2:
 145 0042 C046     		.section	.text.WAIT1_WaitLongCycles,"ax",%progbits
 146              		.align	2
 147              		.global	WAIT1_WaitLongCycles
 148              		.code	16
 149              		.thumb_func
 151              	WAIT1_WaitLongCycles:
 152              	.LFB3:
 181:../Generated_Code/WAIT1.c **** 
 182:../Generated_Code/WAIT1.c **** /*
 183:../Generated_Code/WAIT1.c **** ** ===================================================================
 184:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitLongCycles (component Wait)
 185:../Generated_Code/WAIT1.c **** **     Description :
 186:../Generated_Code/WAIT1.c **** **         Wait for a specified number of CPU cycles (32bit data type).
 187:../Generated_Code/WAIT1.c **** **     Parameters  :
 188:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 189:../Generated_Code/WAIT1.c **** **         cycles          - The number of cycles to wait.
 190:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 191:../Generated_Code/WAIT1.c **** ** ===================================================================
 192:../Generated_Code/WAIT1.c **** */
 193:../Generated_Code/WAIT1.c **** void WAIT1_WaitLongCycles(uint32_t cycles)
 194:../Generated_Code/WAIT1.c **** {
 153              		.loc 1 194 0
 154              		.cfi_startproc
 155 0000 80B5     		push	{r7, lr}
 156              	.LCFI3:
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 160 0002 82B0     		sub	sp, sp, #8
 161              	.LCFI4:
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              	.LCFI5:
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
 195:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 196:../Generated_Code/WAIT1.c ****   uint32_t counter = cycles;
 197:../Generated_Code/WAIT1.c **** 
 198:../Generated_Code/WAIT1.c ****   counter += KIN1_GetCycleCounter();
 199:../Generated_Code/WAIT1.c ****   while(KIN1_GetCycleCounter()<counter) {
 200:../Generated_Code/WAIT1.c ****     /* wait */
 201:../Generated_Code/WAIT1.c ****   }
 202:../Generated_Code/WAIT1.c **** #else
 203:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 204:../Generated_Code/WAIT1.c ****   while(cycles>60000) {
 167              		.loc 1 204 0
 168 0008 07E0     		b	.L9
 169              	.L10:
 205:../Generated_Code/WAIT1.c ****     WAIT1_WaitCycles(60000);
 170              		.loc 1 205 0
 171 000a 0A4B     		ldr	r3, .L11
 172 000c 181C     		mov	r0, r3
 173 000e FFF7FEFF 		bl	WAIT1_WaitCycles
 206:../Generated_Code/WAIT1.c ****     cycles -= 60000;
 174              		.loc 1 206 0
 175 0012 7B68     		ldr	r3, [r7, #4]
 176 0014 084A     		ldr	r2, .L11+4
 177 0016 9B18     		add	r3, r3, r2
 178 0018 7B60     		str	r3, [r7, #4]
 179              	.L9:
 204:../Generated_Code/WAIT1.c ****   while(cycles>60000) {
 180              		.loc 1 204 0
 181 001a 7A68     		ldr	r2, [r7, #4]
 182 001c 054B     		ldr	r3, .L11
 183 001e 9A42     		cmp	r2, r3
 184 0020 F3D8     		bhi	.L10
 207:../Generated_Code/WAIT1.c ****   }
 208:../Generated_Code/WAIT1.c ****   WAIT1_WaitCycles((uint16_t)cycles);
 185              		.loc 1 208 0
 186 0022 7B68     		ldr	r3, [r7, #4]
 187 0024 9BB2     		uxth	r3, r3
 188 0026 181C     		mov	r0, r3
 189 0028 FFF7FEFF 		bl	WAIT1_WaitCycles
 209:../Generated_Code/WAIT1.c ****   /*lint -restore */
 210:../Generated_Code/WAIT1.c **** #endif
 211:../Generated_Code/WAIT1.c **** }
 190              		.loc 1 211 0
 191 002c BD46     		mov	sp, r7
 192 002e 02B0     		add	sp, sp, #8
 193              		@ sp needed for prologue
 194 0030 80BD     		pop	{r7, pc}
 195              	.L12:
 196 0032 C046     		.align	2
 197              	.L11:
 198 0034 60EA0000 		.word	60000
 199 0038 A015FFFF 		.word	-60000
 200              		.cfi_endproc
 201              	.LFE3:
 203              		.section	.text.WAIT1_Waitms,"ax",%progbits
 204              		.align	2
 205              		.global	WAIT1_Waitms
 206              		.code	16
 207              		.thumb_func
 209              	WAIT1_Waitms:
 210              	.LFB4:
 212:../Generated_Code/WAIT1.c **** 
 213:../Generated_Code/WAIT1.c **** /*
 214:../Generated_Code/WAIT1.c **** ** ===================================================================
 215:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitms (component Wait)
 216:../Generated_Code/WAIT1.c **** **     Description :
 217:../Generated_Code/WAIT1.c **** **         Wait for a specified time in milliseconds.
 218:../Generated_Code/WAIT1.c **** **     Parameters  :
 219:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 220:../Generated_Code/WAIT1.c **** **         ms              - How many milliseconds the function has to
 221:../Generated_Code/WAIT1.c **** **                           wait
 222:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 223:../Generated_Code/WAIT1.c **** ** ===================================================================
 224:../Generated_Code/WAIT1.c **** */
 225:../Generated_Code/WAIT1.c **** void WAIT1_Waitms(uint16_t ms)
 226:../Generated_Code/WAIT1.c **** {
 211              		.loc 1 226 0
 212              		.cfi_startproc
 213 0000 80B5     		push	{r7, lr}
 214              	.LCFI6:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 84B0     		sub	sp, sp, #16
 219              	.LCFI7:
 220              		.cfi_def_cfa_offset 24
 221 0004 00AF     		add	r7, sp, #0
 222              	.LCFI8:
 223              		.cfi_def_cfa_register 7
 224 0006 021C     		mov	r2, r0
 225 0008 BB1D     		add	r3, r7, #6
 226 000a 1A80     		strh	r2, [r3]
 227:../Generated_Code/WAIT1.c ****   /*lint -save -e522 function lacks side effect. */
 228:../Generated_Code/WAIT1.c ****   uint32_t msCycles; /* cycles for 1 ms */
 229:../Generated_Code/WAIT1.c **** 
 230:../Generated_Code/WAIT1.c ****   /* static clock/speed configuration */
 231:../Generated_Code/WAIT1.c ****   msCycles = WAIT1_NofCyclesMs(1, WAIT1_INSTR_CLOCK_HZ);
 227              		.loc 1 231 0
 228 000c 094B     		ldr	r3, .L16
 229 000e FB60     		str	r3, [r7, #12]
 232:../Generated_Code/WAIT1.c ****   while(ms>0) {
 230              		.loc 1 232 0
 231 0010 08E0     		b	.L14
 232              	.L15:
 233:../Generated_Code/WAIT1.c ****     WAIT1_WaitLongCycles(msCycles);
 233              		.loc 1 233 0
 234 0012 FB68     		ldr	r3, [r7, #12]
 235 0014 181C     		mov	r0, r3
 236 0016 FFF7FEFF 		bl	WAIT1_WaitLongCycles
 234:../Generated_Code/WAIT1.c ****     ms--;
 237              		.loc 1 234 0
 238 001a BB1D     		add	r3, r7, #6
 239 001c BA1D     		add	r2, r7, #6
 240 001e 1288     		ldrh	r2, [r2]
 241 0020 013A     		sub	r2, r2, #1
 242 0022 1A80     		strh	r2, [r3]
 243              	.L14:
 232:../Generated_Code/WAIT1.c ****   while(ms>0) {
 244              		.loc 1 232 0
 245 0024 BB1D     		add	r3, r7, #6
 246 0026 1B88     		ldrh	r3, [r3]
 247 0028 002B     		cmp	r3, #0
 248 002a F2D1     		bne	.L15
 235:../Generated_Code/WAIT1.c ****   }
 236:../Generated_Code/WAIT1.c ****   /*lint -restore */
 237:../Generated_Code/WAIT1.c **** }
 249              		.loc 1 237 0
 250 002c BD46     		mov	sp, r7
 251 002e 04B0     		add	sp, sp, #16
 252              		@ sp needed for prologue
 253 0030 80BD     		pop	{r7, pc}
 254              	.L17:
 255 0032 C046     		.align	2
 256              	.L16:
 257 0034 EB510000 		.word	20971
 258              		.cfi_endproc
 259              	.LFE4:
 261              		.section	.text.WAIT1_Init,"ax",%progbits
 262              		.align	2
 263              		.global	WAIT1_Init
 264              		.code	16
 265              		.thumb_func
 267              	WAIT1_Init:
 268              	.LFB5:
 238:../Generated_Code/WAIT1.c **** /*
 239:../Generated_Code/WAIT1.c **** ** ===================================================================
 240:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitus (component Wait)
 241:../Generated_Code/WAIT1.c **** **     Description :
 242:../Generated_Code/WAIT1.c **** **         Wait for a specified time in microseconds.
 243:../Generated_Code/WAIT1.c **** **     Parameters  :
 244:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 245:../Generated_Code/WAIT1.c **** **         us              - How many microseconds the function has to
 246:../Generated_Code/WAIT1.c **** **                           wait
 247:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 248:../Generated_Code/WAIT1.c **** ** ===================================================================
 249:../Generated_Code/WAIT1.c **** */
 250:../Generated_Code/WAIT1.c **** /* implemented as macro version. See header file. */
 251:../Generated_Code/WAIT1.c **** /*
 252:../Generated_Code/WAIT1.c **** ** ===================================================================
 253:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Waitns (component Wait)
 254:../Generated_Code/WAIT1.c **** **     Description :
 255:../Generated_Code/WAIT1.c **** **         Wait for a specified time in nano seconds.
 256:../Generated_Code/WAIT1.c **** **     Parameters  :
 257:../Generated_Code/WAIT1.c **** **         NAME            - DESCRIPTION
 258:../Generated_Code/WAIT1.c **** **         ns              - How many ns the function has to wait
 259:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 260:../Generated_Code/WAIT1.c **** ** ===================================================================
 261:../Generated_Code/WAIT1.c **** */
 262:../Generated_Code/WAIT1.c **** /* implemented as macro version. See header file. */
 263:../Generated_Code/WAIT1.c **** /*
 264:../Generated_Code/WAIT1.c **** ** ===================================================================
 265:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_WaitOSms (component Wait)
 266:../Generated_Code/WAIT1.c **** **     Description :
 267:../Generated_Code/WAIT1.c **** **         If an RTOS is enabled, this routine will use a non-blocking
 268:../Generated_Code/WAIT1.c **** **         wait method. Otherwise it will do a busy/blocking wait.
 269:../Generated_Code/WAIT1.c **** **     Parameters  : None
 270:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 271:../Generated_Code/WAIT1.c **** ** ===================================================================
 272:../Generated_Code/WAIT1.c **** */
 273:../Generated_Code/WAIT1.c **** /*
 274:../Generated_Code/WAIT1.c **** void WAIT1_WaitOSms(void)
 275:../Generated_Code/WAIT1.c **** {
 276:../Generated_Code/WAIT1.c ****   Method is implemented as macro in the header file
 277:../Generated_Code/WAIT1.c **** }
 278:../Generated_Code/WAIT1.c **** */
 279:../Generated_Code/WAIT1.c **** 
 280:../Generated_Code/WAIT1.c **** /*
 281:../Generated_Code/WAIT1.c **** ** ===================================================================
 282:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_Init (component Wait)
 283:../Generated_Code/WAIT1.c **** **     Description :
 284:../Generated_Code/WAIT1.c **** **         Driver initialization routine.
 285:../Generated_Code/WAIT1.c **** **     Parameters  : None
 286:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 287:../Generated_Code/WAIT1.c **** ** ===================================================================
 288:../Generated_Code/WAIT1.c **** */
 289:../Generated_Code/WAIT1.c **** void WAIT1_Init(void)
 290:../Generated_Code/WAIT1.c **** {
 269              		.loc 1 290 0
 270              		.cfi_startproc
 271 0000 80B5     		push	{r7, lr}
 272              	.LCFI9:
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 276 0002 00AF     		add	r7, sp, #0
 277              	.LCFI10:
 278              		.cfi_def_cfa_register 7
 291:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 292:../Generated_Code/WAIT1.c ****   /* init cycle counter */
 293:../Generated_Code/WAIT1.c ****   KIN1_InitCycleCounter();
 294:../Generated_Code/WAIT1.c ****   KIN1_ResetCycleCounter();
 295:../Generated_Code/WAIT1.c ****   KIN1_EnableCycleCounter();
 296:../Generated_Code/WAIT1.c **** #endif
 297:../Generated_Code/WAIT1.c **** }
 279              		.loc 1 297 0
 280 0004 BD46     		mov	sp, r7
 281              		@ sp needed for prologue
 282 0006 80BD     		pop	{r7, pc}
 283              		.cfi_endproc
 284              	.LFE5:
 286              		.section	.text.WAIT1_DeInit,"ax",%progbits
 287              		.align	2
 288              		.global	WAIT1_DeInit
 289              		.code	16
 290              		.thumb_func
 292              	WAIT1_DeInit:
 293              	.LFB6:
 298:../Generated_Code/WAIT1.c **** 
 299:../Generated_Code/WAIT1.c **** /*
 300:../Generated_Code/WAIT1.c **** ** ===================================================================
 301:../Generated_Code/WAIT1.c **** **     Method      :  WAIT1_DeInit (component Wait)
 302:../Generated_Code/WAIT1.c **** **     Description :
 303:../Generated_Code/WAIT1.c **** **         Driver de-initialization routine
 304:../Generated_Code/WAIT1.c **** **     Parameters  : None
 305:../Generated_Code/WAIT1.c **** **     Returns     : Nothing
 306:../Generated_Code/WAIT1.c **** ** ===================================================================
 307:../Generated_Code/WAIT1.c **** */
 308:../Generated_Code/WAIT1.c **** void WAIT1_DeInit(void)
 309:../Generated_Code/WAIT1.c **** {
 294              		.loc 1 309 0
 295              		.cfi_startproc
 296 0000 80B5     		push	{r7, lr}
 297              	.LCFI11:
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 7, -8
 300              		.cfi_offset 14, -4
 301 0002 00AF     		add	r7, sp, #0
 302              	.LCFI12:
 303              		.cfi_def_cfa_register 7
 310:../Generated_Code/WAIT1.c **** #if WAIT1_CONFIG_USE_CYCLE_COUNTER
 311:../Generated_Code/WAIT1.c ****   /* disable hardware cycle counter */
 312:../Generated_Code/WAIT1.c ****   KIN1_DisableCycleCounter();
 313:../Generated_Code/WAIT1.c **** #endif
 314:../Generated_Code/WAIT1.c **** }
 304              		.loc 1 314 0
 305 0004 BD46     		mov	sp, r7
 306              		@ sp needed for prologue
 307 0006 80BD     		pop	{r7, pc}
 308              		.cfi_endproc
 309              	.LFE6:
 311              		.text
 312              	.Letext0:
 313              		.file 2 "D:/Freescale/CodeWarrior11/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
DEFINED SYMBOLS
                            *ABS*:00000000 WAIT1.c
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:18     .text.WAIT1_Wait10Cycles:00000000 $t
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:23     .text.WAIT1_Wait10Cycles:00000000 WAIT1_Wait10Cycles
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:42     .text.WAIT1_Wait100Cycles:00000000 $t
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:47     .text.WAIT1_Wait100Cycles:00000000 WAIT1_Wait100Cycles
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:55     .text.WAIT1_Wait100Cycles:00000004 loop
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:80     .text.WAIT1_WaitCycles:00000000 $t
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:85     .text.WAIT1_WaitCycles:00000000 WAIT1_WaitCycles
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:146    .text.WAIT1_WaitLongCycles:00000000 $t
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:151    .text.WAIT1_WaitLongCycles:00000000 WAIT1_WaitLongCycles
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:198    .text.WAIT1_WaitLongCycles:00000034 $d
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:204    .text.WAIT1_Waitms:00000000 $t
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:209    .text.WAIT1_Waitms:00000000 WAIT1_Waitms
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:257    .text.WAIT1_Waitms:00000034 $d
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:262    .text.WAIT1_Init:00000000 $t
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:267    .text.WAIT1_Init:00000000 WAIT1_Init
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:287    .text.WAIT1_DeInit:00000000 $t
C:\Users\David\AppData\Local\Temp\cccvXuWX.s:292    .text.WAIT1_DeInit:00000000 WAIT1_DeInit
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
